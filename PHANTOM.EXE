-- String-only obfuscated script
local S0 = (function() return "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL05lYnVsYS1Tb2Z0d29ya3MvTHVuYS1JbnRlcmZhY2UtU3VpdGUvcmVmcy9oZWFkcy9tYWluL3NvdXJjZS5sdWE=" end)()
local S1 = (function() return "SHVtYW5vaWQ=" end)()
local S2 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S3 = (function() return "UGF0aGZpbmRpbmdTZXJ2aWNl" end)()
local S4 = (function() return "UGhhbnRvbS5leGU=" end)()
local S5 = (function() return "ODI3OTUzMjcxNjk3ODI=" end)()
local S6 = (function() return "UGhhbnRvbS5leGU=" end)()
local S7 = (function() return "QnkgUGhhbnRvbQ==" end)()
local S8 = (function() return "QmlnIEh1Yg==" end)()
local S9 = (function() return "UGhhbnRvbSBLZXkuZXhl" end)()
local S10 = (function() return "S2V5IFN5c3RlbQ==" end)()
local S11 = (function() return "QmVzdCBLZXkgU3lzdGVtIEV2ZXIhIEFsc28sIFBsZWFzZSBVc2UgQSBIV0lEIEtleXN5c3RlbSBsaWtlIFBlbGljYW4sIEx1YXJtb3IgZXRjLiB0aGF0IHByb3ZpZGUga2V5IHN0cmluZ3MgYmFzZWQgb24geW91ciBIV0lEIHNpbmNlIHB1dHRpbmcgYSBzaW1wbGUgc3RyaW5nIGlzIHZlcnkgZWFzeSB0byBieXBhc3M=" end)()
local S12 = (function() return "UGhhbnRvbQ==" end)()
local S13 = (function() return "TGluaw==" end)()
local S14 = (function() return "" end)()
local S15 = (function() return "UGxheWVy" end)()
local S16 = (function() return "cGVyc29u" end)()
local S17 = (function() return "TWF0ZXJpYWw=" end)()
local S18 = (function() return "QWltYm90" end)()
local S19 = (function() return "Z3BzX2ZpeGVk" end)()
local S20 = (function() return "TWF0ZXJpYWw=" end)()
local S21 = (function() return "VmlzdWFscw==" end)()
local S22 = (function() return "dmlzaWJpbGl0eQ==" end)()
local S23 = (function() return "TWF0ZXJpYWw=" end)()
local S24 = (function() return "Q29tYmF0" end)()
local S25 = (function() return "Z2F2ZWw=" end)()
local S26 = (function() return "TWF0ZXJpYWw=" end)()
local S27 = (function() return "V2VhcG9u" end)()
local S28 = (function() return "c2hpZWxk" end)()
local S29 = (function() return "TWF0ZXJpYWw=" end)()
local S30 = (function() return "VmVoaWNsZQ==" end)()
local S31 = (function() return "ZGlyZWN0aW9uc19jYXI=" end)()
local S32 = (function() return "TWF0ZXJpYWw=" end)()
local S33 = (function() return "Sm9iIEF1dG9GYXJt" end)()
local S34 = (function() return "ZXVyb19zeW1ib2w=" end)()
local S35 = (function() return "TWF0ZXJpYWw=" end)()
local S36 = (function() return "Sm9iIEF1dG9GYXJtIEluZm8=" end)()
local S37 = (function() return "QkVUQSE=" end)()
local S38 = (function() return "SHVtYW5vaWQ=" end)()
local S39 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S40 = (function() return "SHVtYW5vaWQ=" end)()
local S41 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S42 = (function() return "RmFpbGVkIHRvIGdldCBjaGFyYWN0ZXIgcmVmZXJlbmNlcw==" end)()
local S43 = (function() return "Q2xlYW5pbmcgdXAgYXV0byBmYXJtIHNjcmlwdC4uLg==" end)()
local S44 = (function() return "QXV0byBmYXJtIHNjcmlwdCBzdG9wcGVkIGFuZCBjbGVhbmVkIHVwLg==" end)()
local S45 = (function() return "Q2hhcmFjdGVyIGRpZWQuIFdhaXRpbmcgZm9yIHJlc3Bhd24uLi4=" end)()
local S46 = (function() return "V2FpdGluZyBmb3IgY2hhcmFjdGVyIHRvIHJlc3Bhd24uLi4=" end)()
local S47 = (function() return "Q2hhcmFjdGVyIHJlc3Bhd25lZCEgQ29udGludWluZyBhdXRvIGZhcm0uLi4=" end)()
local S48 = (function() return "Tm8gY2hhcmFjdGVyIGZvdW5kLCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S49 = (function() return "Tm8gY2hhcmFjdGVyIGZvdW5kLCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S50 = (function() return "UGF0aGZpbmRpbmdTZXJ2aWNl" end)()
local S51 = (function() return "UmVhY2hlZCBkZXN0aW5hdGlvbiE=" end)()
local S52 = (function() return "UGF0aCBjb21wdXRhdGlvbiBmYWlsZWQ6" end)()
local S53 = (function() return "VXNpbmcgZGlyZWN0IHR3ZWVuIHRvIHRhcmdldCBpbnN0ZWFkLi4u" end)()
local S54 = (function() return "Tm8gY2hhcmFjdGVyIGZvdW5kLCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S55 = (function() return "VHJpZ2dlcmluZyBqb2IgYXBwbGljYXRpb24gVUkuLi4=" end)()
local S56 = (function() return "Sm9iIFVJIHRyaWdnZXJlZCEgUGxlYXNlIGNsaWNrIHRoZSBBcHBseSBidXR0b24gbWFudWFsbHku" end)()
local S57 = (function() return "V2FpdGluZyBmb3IgeW91IHRvIGNsaWNrIHRoZSBBcHBseSBidXR0b24uLi4=" end)()
local S58 = (function() return "Q29udGludWluZyB3aXRoIHNoZWxmIHN0b2NraW5nIHdvcmsuLi4=" end)()
local S59 = (function() return "Tm93IGZpcmluZyBwcm94aW1pdHkgcHJvbXB0IGZvciBzaGVsZiBzdG9ja2luZyBib3guLi4=" end)()
local S60 = (function() return "RmlyZWQgcHJveGltaXR5IHByb21wdCBmb3IgdGhlIHNoZWxmIHN0b2NraW5nIGJveCE=" end)()
local S61 = (function() return "U2VhcmNoaW5nIGZvciBiZWFjb24uYmFzZS4uLg==" end)()
local S62 = (function() return "QmVhY29uLkJhc2Ugbm90IGZvdW5kISBCb3ggbWF5IGhhdmUgYWxyZWFkeSBiZWVuIGRlbGl2ZXJlZCBvciB0aGVyZSdzIGFuIGlzc3VlLg==" end)()
local S63 = (function() return "Rm91bmQgQmVhY29uLkJhc2UsIG1vdmluZyB0byBpdCBub3cuLi4=" end)()
local S64 = (function() return "UmVhY2hlZCB0aGUgYmVhY29uIQ==" end)()
local S65 = (function() return "Qm94IHN1Y2Nlc3NmdWxseSBkZWxpdmVyZWQhIEJlYWNvbiBubyBsb25nZXIgZXhpc3RzLg==" end)()
local S66 = (function() return "V2FpdGluZyBmb3IgY2hhcmFjdGVyLi4u" end)()
local S67 = (function() return "RmFpbGVkIHRvIHJlYWNoIGpvYiBsb2NhdGlvbiwgcmV0cnlpbmcuLi4=" end)()
local S68 = (function() return "RmFpbGVkIHRvIGFwcGx5IGZvciBqb2IsIHJldHJ5aW5nLi4u" end)()
local S69 = (function() return "Q2hhcmFjdGVyIGxvc3QsIHdhaXRpbmcgZm9yIHJlc3Bhd24uLi4=" end)()
local S70 = (function() return "LS0tIFN0YXJ0aW5nIGJveCAj" end)()
local S71 = (function() return "IC0tLQ==" end)()
local S72 = (function() return "TW92aW5nIHRvIGJveCBwaWNrdXAgbG9jYXRpb24uLi4=" end)()
local S73 = (function() return "RmFpbGVkIHRvIG1vdmUgdG8gcGlja3VwIGxvY2F0aW9uLCByZXRyeWluZy4uLg==" end)()
local S74 = (function() return "Qm94ICM=" end)()
local S75 = (function() return "IHBpY2tlZCB1cCBzdWNjZXNzZnVsbHk=" end)()
local S76 = (function() return "Qm94ICM=" end)()
local S77 = (function() return "IGRlbGl2ZXJlZCBzdWNjZXNzZnVsbHkh" end)()
local S78 = (function() return "SXNzdWUgd2l0aCBkZWxpdmVyeSBmb3IgYm94ICM=" end)()
local S79 = (function() return "LCBjb250aW51aW5nIGFueXdheS4uLg==" end)()
local S80 = (function() return "RmFpbGVkIHRvIHBpY2sgdXAgYm94LCByZXRyeWluZy4uLg==" end)()
local S81 = (function() return "LS0tIENvbXBsZXRlZCBjeWNsZSAj" end)()
local S82 = (function() return "IC0tLQ==" end)()
local S83 = (function() return "UmVzdGFydGluZyBkdWUgdG8gY2hhcmFjdGVyIGlzc3VlLi4u" end)()
local S84 = (function() return "QXV0byBmYXJtIGV4ZWN1dGlvbiB0ZXJtaW5hdGVkLg==" end)()
local S85 = (function() return "UXVpY2stMTEgQXV0b0Zhcm0=" end)()
local S86 = (function() return "" end)()
local S87 = (function() return "QXV0byBmYXJtIHN0YXJ0ZWQh" end)()
local S88 = (function() return "QXV0byBmYXJtIHN0b3BwZWQh" end)()
local S89 = (function() return "UXVpY2sxMVRvZ2dsZQ==" end)()
local S90 = (function() return "SHVtYW5vaWQ=" end)()
local S91 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S92 = (function() return "SHVtYW5vaWQ=" end)()
local S93 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S94 = (function() return "RmFpbGVkIHRvIGdldCBqYW5pdG9yIGNoYXJhY3RlciByZWZlcmVuY2Vz" end)()
local S95 = (function() return "Q2xlYW5pbmcgdXAgamFuaXRvciBmYXJtIHNjcmlwdC4uLg==" end)()
local S96 = (function() return "SmFuaXRvciBmYXJtIHNjcmlwdCBzdG9wcGVkIGFuZCBjbGVhbmVkIHVwLg==" end)()
local S97 = (function() return "Q2hhcmFjdGVyIGRpZWQuIFdhaXRpbmcgZm9yIHJlc3Bhd24uLi4=" end)()
local S98 = (function() return "V2FpdGluZyBmb3IgY2hhcmFjdGVyIHRvIHJlc3Bhd24uLi4=" end)()
local S99 = (function() return "Q2hhcmFjdGVyIHJlc3Bhd25lZCEgQ29udGludWluZyBqYW5pdG9yIGZhcm0uLi4=" end)()
local S100 = (function() return "Tm8gY2hhcmFjdGVyIGZvdW5kLCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S101 = (function() return "UGF0aGZpbmRpbmdTZXJ2aWNl" end)()
local S102 = (function() return "VmVjdG9yMw==" end)()
local S103 = (function() return "RmFpbGVkIHRvIGNvbXB1dGUgcGF0aDo=" end)()
local S104 = (function() return "Q2hhcmFjdGVyIGxvc3QgZHVyaW5nIG1vdmVtZW50LCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S105 = (function() return "Q2hhcmFjdGVyIGxvc3QgZHVyaW5nIGZpbmFsIG1vdmVtZW50LCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S106 = (function() return "UmVhY2hlZCBkZXN0aW5hdGlvbg==" end)()
local S107 = (function() return "Tm8gY2hhcmFjdGVyIGZvdW5kIGZvciB0b3VjaCBpbnRlcmFjdGlvbiwgd2FpdGluZyBmb3IgcmVzcGF3bi4uLg==" end)()
local S108 = (function() return "VG91Y2hJbnRlcmVzdA==" end)()
local S109 = (function() return "RmlyZWQgdG91Y2ggZXZlbnQ=" end)()
local S110 = (function() return "VG91Y2hJbnRlcmVzdCBub3QgZm91bmQ=" end)()
local S111 = (function() return "TG9va2luZyBmb3IgQXBwbHkgYnV0dG9uLi4u" end)()
local S112 = (function() return "QXBwbHkgdG8gSmFuaXRvciBqb2I=" end)()
local S113 = (function() return "U2NyZWVuR3Vp" end)()
local S114 = (function() return "QXBwbHkgdG8gSmFuaXRvciBqb2I/" end)()
local S115 = (function() return "VGV4dExhYmVs" end)()
local S116 = (function() return "QXBwbHkgdG8gSmFuaXRvcg==" end)()
local S117 = (function() return "Rm91bmQgam9iIGRpYWxvZyB3aXRoIHRleHQ6IA==" end)()
local S118 = (function() return "QXBwbHk=" end)()
local S119 = (function() return "VGV4dEJ1dHRvbg==" end)()
local S120 = (function() return "QXBwbHk=" end)()
local S121 = (function() return "Rm91bmQgQXBwbHkgYnV0dG9uIQ==" end)()
local S122 = (function() return "TWV0aG9kIDE6IERpcmVjdCBNb3VzZUJ1dHRvbjFDbGljayBmaXJlIHN1Y2NlZWRlZA==" end)()
local S123 = (function() return "TWV0aG9kIDI6IGdldGNvbm5lY3Rpb25zIGZpcmUgc3VjY2VlZGVk" end)()
local S124 = (function() return "U3VjY2Vzc2Z1bGx5IGNsaWNrZWQgQXBwbHkgYnV0dG9uIQ==" end)()
local S125 = (function() return "Q291bGQgbm90IGZpbmQgQXBwbHkgYnV0dG9uIGluIGFueSBHVUk=" end)()
local S126 = (function() return "U2VhcmNoaW5nIGZvciBzbWFsbCBwdWRkbGVzIG9ubHkuLi4=" end)()
local S127 = (function() return "U21hbGxQdWRkbGU=" end)()
local S128 = (function() return "Rm91bmQgbmFtZWQgU21hbGxQdWRkbGU=" end)()
local S129 = (function() return "U21hbGw=" end)()
local S130 = (function() return "U21hbGw=" end)()
local S131 = (function() return "U21hbGw=" end)()
local S132 = (function() return "Rm91bmQgcHVkZGxlIHdpdGggU21hbGwgaW4gbmFtZTog" end)()
local S133 = (function() return "RXhjbHVkaW5nIHB1ZGRsZSBhdCBpbmRleCA=" end)()
local S134 = (function() return "Tm8gY2hhcmFjdGVyIGZvdW5kIGZvciBwdWRkbGUgY2xlYW5pbmcsIHdhaXRpbmcgZm9yIHJlc3Bhd24uLi4=" end)()
local S135 = (function() return "Q2xlYW5pbmcgcHVkZGxlOiA=" end)()
local S136 = (function() return "Q2xlYW5pbmcgYSBzbWFsbCBwdWRkbGU6IA==" end)()
local S137 = (function() return "VG91Y2hJbnRlcmVzdA==" end)()
local S138 = (function() return "VG91Y2hpbmcgcHVkZGxlIHRvIHN0YXJ0IGNsZWFuaW5nLi4u" end)()
local S139 = (function() return "V2FpdGluZyA=" end)()
local S140 = (function() return "IHNlY29uZHMgdG8gY2xlYW4gcHVkZGxlLi4u" end)()
local S141 = (function() return "UHVkZGxlIGNsZWFuaW5nIGNvbXBsZXRlZA==" end)()
local S142 = (function() return "UHJveGltaXR5UHJvbXB0" end)()
local S143 = (function() return "QWN0aXZhdGluZyBwcm94aW1pdHkgcHJvbXB0IG9uIHB1ZGRsZS4uLg==" end)()
local S144 = (function() return "UHVkZGxlIGNsZWFuaW5nIGNvbXBsZXRlZA==" end)()
local S145 = (function() return "Tm8gZGlyZWN0IGludGVyYWN0aW9uIG1ldGhvZCBmb3VuZCwgd2FpdGluZyBhdCBwdWRkbGUuLi4=" end)()
local S146 = (function() return "UHVkZGxlIGNsZWFuaW5nIGNvbXBsZXRlZA==" end)()
local S147 = (function() return "U3RhcnRpbmcgY29udGludW91cyBwdWRkbGUgY2xlYW5pbmcgbG9vcC4uLg==" end)()
local S148 = (function() return "Q2hhcmFjdGVyIGxvc3QgZHVyaW5nIHB1ZGRsZSBsb29wLCB3YWl0aW5nIGZvciByZXNwYXduLi4u" end)()
local S149 = (function() return "Rm91bmQg" end)()
local S150 = (function() return "IHB1ZGRsZXMgdG8gdmlzaXQ=" end)()
local S151 = (function() return "Tm8gcHVkZGxlcyBmb3VuZCwgd2FpdGluZyBiZWZvcmUgcmV0cnlpbmcuLi4=" end)()
local S152 = (function() return "Q2hhcmFjdGVyIGxvc3QgYmVmb3JlIHB1ZGRsZSA=" end)()
local S153 = (function() return "LCBicmVha2luZyBsb29wLi4u" end)()
local S154 = (function() return "TW92aW5nIHRvIHB1ZGRsZSA=" end)()
local S155 = (function() return "Lw==" end)()
local S156 = (function() return "IC0g" end)()
local S157 = (function() return "RmFpbGVkIHRvIHJlYWNoIHB1ZGRsZSA=" end)()
local S158 = (function() return "Q29tcGxldGVkIG9uZSBjbGVhbmluZyBjeWNsZSwgd2FpdGluZyBiZWZvcmUgc3RhcnRpbmcgdGhlIG5leHQgY3ljbGUuLi4=" end)()
local S159 = (function() return "V2FpdGluZyBmb3IgY2hhcmFjdGVyLi4u" end)()
local S160 = (function() return "U3RhcnRpbmcgamFuaXRvciBqb2IgYXBwbGljYXRpb24gc2VxdWVuY2U=" end)()
local S161 = (function() return "LSBGaXhlZCBZIHBvc2l0aW9uOiA=" end)()
local S162 = (function() return "LSBUd2VlbiBzcGVlZDog" end)()
local S163 = (function() return "IChsb3dlciA9IGZhc3Rlcik=" end)()
local S164 = (function() return "LSBCYXNlIHdhaXQgdGltZSBwZXIgcHVkZGxlOiA=" end)()
local S165 = (function() return "IHNlY29uZHM=" end)()
local S166 = (function() return "LSBMb29wIHdhaXQgdGltZTog" end)()
local S167 = (function() return "IHNlY29uZHM=" end)()
local S168 = (function() return "LSBDTEVBTklORyBTTUFMTCBQVURETEVTIE9OTFk=" end)()
local S169 = (function() return "U3VjY2Vzc2Z1bGx5IGFwcGxpZWQgZm9yIGphbml0b3Igam9iIQ==" end)()
local S170 = (function() return "RmFpbGVkIHRvIGNsaWNrIEFwcGx5IGJ1dHRvbi4gVHJ5aW5nIHRvIHN0YXJ0IHB1ZGRsZSBjbGVhbmluZyBhbnl3YXkuLi4=" end)()
local S171 = (function() return "RmFpbGVkIHRvIGludGVyYWN0IHdpdGggdGhlIFRvdWNoUGFydCwgcmV0cnlpbmcuLi4=" end)()
local S172 = (function() return "RmFpbGVkIHRvIHJlYWNoIHRhcmdldCBsb2NhdGlvbiwgcmV0cnlpbmcuLi4=" end)()
local S173 = (function() return "UmVzdGFydGluZyBkdWUgdG8gY2hhcmFjdGVyIGlzc3VlLi4u" end)()
local S174 = (function() return "QnVyZ2VyIFBsYWNlIEF1dG9GYXJt" end)()
local S175 = (function() return "" end)()
local S176 = (function() return "SmFuaXRvciBmYXJtIHN0YXJ0ZWQh" end)()
local S177 = (function() return "SmFuaXRvciBmYXJtIHN0b3BwZWQh" end)()
local S178 = (function() return "SmFuaXRvclRvZ2dsZQ==" end)()
local S179 = (function() return "SHVtYW5vaWQ=" end)()
local S180 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S181 = (function() return "TW9kZWw=" end)()
local S182 = (function() return "R3JpbGxBcmVh" end)()
local S183 = (function() return "U2NyZWVuR3Vp" end)()
local S184 = (function() return "UHJvZ3Jlc3NCYXJGcmFtZQ==" end)()
local S185 = (function() return "TWFpbkZyYW1l" end)()
local S186 = (function() return "SW5wdXRGcmFtZQ==" end)()
local S187 = (function() return "QmFyQW1vdW50" end)()
local S188 = (function() return "Q29va2VkUGVyZmVjdGx5" end)()
local S189 = (function() return "Y29va2luZ19jb21wbGV0ZQ==" end)()
local S190 = (function() return "ZmluaXNoX2Nvb2tpbmc=" end)()
local S191 = (function() return "am9iX3Rhc2tfY29tcGxldGU=" end)()
local S192 = (function() return "Y29va2luZ19jb21wbGV0ZQ==" end)()
local S193 = (function() return "am9iX3Rhc2tfY29tcGxldGU=" end)()
local S194 = (function() return "c3RlYWtob3VzZV9jb29r" end)()
local S195 = (function() return "cGVyZmVjdA==" end)()
local S196 = (function() return "RmluaXNoQmFy" end)()
local S197 = (function() return "SHVtYW5vaWQ=" end)()
local S198 = (function() return "SHVtYW5vaWQ=" end)()
local S199 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S200 = (function() return "UGF0aGZpbmRpbmdTZXJ2aWNl" end)()
local S201 = (function() return "UGF0aCBjb21wdXRhdGlvbiBmYWlsZWQ6" end)()
local S202 = (function() return "QXR0YWNobWVudA==" end)()
local S203 = (function() return "UHJveGltaXR5UHJvbXB0" end)()
local S204 = (function() return "UHJveGltaXR5UHJvbXB0" end)()
local S205 = (function() return "QmFzZVBhcnQ=" end)()
local S206 = (function() return "QXR0YWNobWVudA==" end)()
local S207 = (function() return "QmFzZVBhcnQ=" end)()
local S208 = (function() return "QmVhY29u" end)()
local S209 = (function() return "QmFzZQ==" end)()
local S210 = (function() return "U3RlYWtob3VzZSBBdXRvIEZhcm0=" end)()
local S211 = (function() return "" end)()
local S212 = (function() return "U3RlYWtob3VzZUZhcm1Ub2dnbGU=" end)()
local S213 = (function() return "U2NyZWVuR3Vp" end)()
local S214 = (function() return "UHJvZ3Jlc3NCYXJGcmFtZQ==" end)()
local S215 = (function() return "RXJyb3IgaW4gYXV0byBjb29raW5nOiA=" end)()
local S216 = (function() return "UmVwbGljYXRlZFN0b3JhZ2U=" end)()
local S217 = (function() return "UmVwbGljYXRlZFN0b3JhZ2U=" end)()
local S218 = (function() return "MzQ1MDc5NDE4NA==" end)()
local S219 = (function() return "Q2xlYW5pbmcgdXAgQVRNIGhhY2sgc2NyaXB0Li4u" end)()
local S220 = (function() return "QVRNIGhhY2sgc2NyaXB0IHN0b3BwZWQgYW5kIGNsZWFuZWQgdXAu" end)()
local S221 = (function() return "QVRNIEhhY2sgc3RhcnRlZCEgVGhlIHNjcmlwdCB3aWxsIGF1dG9tYXRpY2FsbHkgd2luIEFUTSBtaW5pZ2FtZXMu" end)()
local S222 = (function() return "QXV0by13aW4gZXJyb3I6IA==" end)()
local S223 = (function() return "QVRNIEhhY2sgQXV0b1dpbg==" end)()
local S224 = (function() return "QVRNIEhhY2sgc3RhcnRlZCE=" end)()
local S225 = (function() return "QVRNIEhhY2sgc3RvcHBlZCE=" end)()
local S226 = (function() return "QVRNSGFja1RvZ2dsZQ==" end)()
local S227 = (function() return "MkQgQm94" end)()
local S228 = (function() return "TGluZQ==" end)()
local S229 = (function() return "TGluZQ==" end)()
local S230 = (function() return "TGluZQ==" end)()
local S231 = (function() return "TGluZQ==" end)()
local S232 = (function() return "bnVtYmVy" end)()
local S233 = (function() return "TGluZQ==" end)()
local S234 = (function() return "bnVtYmVy" end)()
local S235 = (function() return "MkQgQm94" end)()
local S236 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S237 = (function() return "SHVtYW5vaWQ=" end)()
local S238 = (function() return "SGVhZA==" end)()
local S239 = (function() return "bnVtYmVy" end)()
local S240 = (function() return "bnVtYmVy" end)()
local S241 = (function() return "bnVtYmVy" end)()
local S242 = (function() return "bnVtYmVy" end)()
local S243 = (function() return "M0QgQm94" end)()
local S244 = (function() return "SHVtYW5vaWQ=" end)()
local S245 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S246 = (function() return "MkQgQm94" end)()
local S247 = (function() return "M0QgQm94" end)()
local S248 = (function() return "bnVtYmVy" end)()
local S249 = (function() return "RVNQIFR5cGU=" end)()
local S250 = (function() return "MkQgQm94" end)()
local S251 = (function() return "M0QgQm94" end)()
local S252 = (function() return "MkQgQm94" end)()
local S253 = (function() return "RVNQRHJvcGRvd24=" end)()
local S254 = (function() return "Qm94IEVTUA==" end)()
local S255 = (function() return "RVNQVG9nZ2xl" end)()
local S256 = (function() return "MkQgQm94" end)()
local S257 = (function() return "M0QgQm94" end)()
local S258 = (function() return "SGVhZA==" end)()
local S259 = (function() return "TmFtZVRhZw==" end)()
local S260 = (function() return "QmlsbGJvYXJkR3Vp" end)()
local S261 = (function() return "TmFtZVRhZw==" end)()
local S262 = (function() return "VGV4dExhYmVs" end)()
local S263 = (function() return "SGVhZA==" end)()
local S264 = (function() return "TmFtZVRhZw==" end)()
local S265 = (function() return "TmFtZSBFU1A=" end)()
local S266 = (function() return "TmFtZVRhZ3NUb2dnbGU=" end)()
local S267 = (function() return "TGVnZW5kYXJ5" end)()
local S268 = (function() return "T21lZ2E=" end)()
local S269 = (function() return "VW5jb21tb24=" end)()
local S270 = (function() return "TGVnZW5kYXJ5" end)()
local S271 = (function() return "RG91YmxlIEJhcnJlbA==" end)()
local S272 = (function() return "RXBpYw==" end)()
local S273 = (function() return "RXBpYw==" end)()
local S274 = (function() return "VW5jb21tb24=" end)()
local S275 = (function() return "UmFyZQ==" end)()
local S276 = (function() return "SHVudGluZyBSaWZsZQ==" end)()
local S277 = (function() return "UmFyZQ==" end)()
local S278 = (function() return "RXBpYw==" end)()
local S279 = (function() return "TGVnZW5kYXJ5" end)()
local S280 = (function() return "UmFyZQ==" end)()
local S281 = (function() return "TGVnZW5kYXJ5" end)()
local S282 = (function() return "TGVnZW5kYXJ5" end)()
local S283 = (function() return "UmFyZQ==" end)()
local S284 = (function() return "UmFyZQ==" end)()
local S285 = (function() return "UmFyZQ==" end)()
local S286 = (function() return "QmFyYmVkIEJhc2ViYWxsIEJhdA==" end)()
local S287 = (function() return "RXBpYw==" end)()
local S288 = (function() return "QmFzZWJhbGwgQmF0" end)()
local S289 = (function() return "VW5jb21tb24=" end)()
local S290 = (function() return "QmlrZSBMb2Nr" end)()
local S291 = (function() return "Q29tbW9u" end)()
local S292 = (function() return "QnJvbnplIE1vcA==" end)()
local S293 = (function() return "Q29tbW9u" end)()
local S294 = (function() return "Q2hhaXIgTGVn" end)()
local S295 = (function() return "Q29tbW9u" end)()
local S296 = (function() return "QnV0Y2hlciBLbmlmZQ==" end)()
local S297 = (function() return "UmFyZQ==" end)()
local S298 = (function() return "Q29tYmF0IEF4ZQ==" end)()
local S299 = (function() return "RXBpYw==" end)()
local S300 = (function() return "UmFyZQ==" end)()
local S301 = (function() return "RGlhbW9uZCBNb3A=" end)()
local S302 = (function() return "UmFyZQ==" end)()
local S303 = (function() return "RnJ5aW5nIFBhbg==" end)()
local S304 = (function() return "UmFyZQ==" end)()
local S305 = (function() return "R29sZCBNb3A=" end)()
local S306 = (function() return "VW5jb21tb24=" end)()
local S307 = (function() return "VW5jb21tb24=" end)()
local S308 = (function() return "RXBpYw==" end)()
local S309 = (function() return "TWV0YWwgQmFzZWJhbGwgQmF0" end)()
local S310 = (function() return "UmFyZQ==" end)()
local S311 = (function() return "TWV0YWwgUGlwZQ==" end)()
local S312 = (function() return "Q29tbW9u" end)()
local S313 = (function() return "Q29tbW9u" end)()
local S314 = (function() return "TmFpbGVkIFdvb2RlbiBCb2FyZA==" end)()
local S315 = (function() return "VW5jb21tb24=" end)()
local S316 = (function() return "UG9vbCBDdWU=" end)()
local S317 = (function() return "Q29tbW9u" end)()
local S318 = (function() return "Um9sbGluZyBQaW4=" end)()
local S319 = (function() return "Q29tbW9u" end)()
local S320 = (function() return "UnVzdHkgU2hvdmVs" end)()
local S321 = (function() return "VW5jb21tb24=" end)()
local S322 = (function() return "Q29tbW9u" end)()
local S323 = (function() return "RXBpYw==" end)()
local S324 = (function() return "U2lsdmVyIE1vcA==" end)()
local S325 = (function() return "Q29tbW9u" end)()
local S326 = (function() return "U2xlZGdlIEhhbW1lcg==" end)()
local S327 = (function() return "RXBpYw==" end)()
local S328 = (function() return "UmFyZQ==" end)()
local S329 = (function() return "VGFjdGljYWwgQXhl" end)()
local S330 = (function() return "TGVnZW5kYXJ5" end)()
local S331 = (function() return "VGFjdGljYWwgS25pZmU=" end)()
local S332 = (function() return "TGVnZW5kYXJ5" end)()
local S333 = (function() return "VGFjdGljYWwgU2hvdmVs" end)()
local S334 = (function() return "TGVnZW5kYXJ5" end)()
local S335 = (function() return "Q29tbW9u" end)()
local S336 = (function() return "VGlyZSBJcm9u" end)()
local S337 = (function() return "VW5jb21tb24=" end)()
local S338 = (function() return "V29vZGVuIEJvYXJk" end)()
local S339 = (function() return "Q29tbW9u" end)()
local S340 = (function() return "UmFyZQ==" end)()
local S341 = (function() return "cmJ4YXNzZXRpZDovLzEyNDU1NTQzMDU3NzE3OA==" end)()
local S342 = (function() return "cmJ4YXNzZXRpZDovLzEzMjc4MTE3NDgzOTg0NA==" end)()
local S343 = (function() return "cmJ4YXNzZXRpZDovLzc5NjU5MDc5OTg4MDIy" end)()
local S344 = (function() return "cmJ4YXNzZXRpZDovLzg5MjQwNjQyMzc2NzE1" end)()
local S345 = (function() return "RG91YmxlIEJhcnJlbA==" end)()
local S346 = (function() return "cmJ4YXNzZXRpZDovLzgzNjI1NzY1NjM4MDM5" end)()
local S347 = (function() return "cmJ4YXNzZXRpZDovLzEyMDkzNzYxNjI2NjkwMw==" end)()
local S348 = (function() return "cmJ4YXNzZXRpZDovLzEzMzQxMTI5MTM5ODAwMg==" end)()
local S349 = (function() return "cmJ4YXNzZXRpZDovLzk3ODQ2MTU0MzY2ODcw" end)()
local S350 = (function() return "SHVudGluZyBSaWZsZQ==" end)()
local S351 = (function() return "cmJ4YXNzZXRpZDovLzgxNTQ3NzA0OTY1MTUz" end)()
local S352 = (function() return "cmJ4YXNzZXRpZDovLzczMzg3OTY1OTgyNjAz" end)()
local S353 = (function() return "cmJ4YXNzZXRpZDovLzgwNTAxMDc5NDg5Nzc3" end)()
local S354 = (function() return "cmJ4YXNzZXRpZDovLzkyNTIxMTAwMjk3Nzc2" end)()
local S355 = (function() return "cmJ4YXNzZXRpZDovLzEzODQyNjAwMDE0MjgwNw==" end)()
local S356 = (function() return "cmJ4YXNzZXRpZDovLzEwMTI3MTM3NTkzMDQwOQ==" end)()
local S357 = (function() return "cmJ4YXNzZXRpZDovLzkwNTg4MzA1ODkyNzA3" end)()
local S358 = (function() return "cmJ4YXNzZXRpZDovLzEwOTI5MDY5NTY1MjMzOA==" end)()
local S359 = (function() return "cmJ4YXNzZXRpZDovLzEwMTExMTIyMjMxMjUwNw==" end)()
local S360 = (function() return "QmFyYmVkIEJhc2ViYWxsIEJhdA==" end)()
local S361 = (function() return "cmJ4YXNzZXRpZDovLzEyNDE4NzU0Nzc4NzM5MA==" end)()
local S362 = (function() return "QmFzZWJhbGwgQmF0" end)()
local S363 = (function() return "cmJ4YXNzZXRpZDovLzcwMzkwMjAxNTA3ODM5" end)()
local S364 = (function() return "QmlrZSBMb2Nr" end)()
local S365 = (function() return "cmJ4YXNzZXRpZDovLzEzMzA2MDY3MjY2OTI2MA==" end)()
local S366 = (function() return "QnJvbnplIE1vcA==" end)()
local S367 = (function() return "cmJ4YXNzZXRpZDovLzgyODMzMjA1MTc1NTE1" end)()
local S368 = (function() return "QnV0Y2hlciBLbmlmZQ==" end)()
local S369 = (function() return "cmJ4YXNzZXRpZDovLzg1Mzg4NDc3MzE0NzU5" end)()
local S370 = (function() return "Q2hhaXIgTGVn" end)()
local S371 = (function() return "cmJ4YXNzZXRpZDovLzExNDQ2OTkwMzA2ODg3NQ==" end)()
local S372 = (function() return "Q29tYmF0IEF4ZQ==" end)()
local S373 = (function() return "cmJ4YXNzZXRpZDovLzg4OTc3NTc2MzcyMDMx" end)()
local S374 = (function() return "cmJ4YXNzZXRpZDovLzkwNDI0MTE1MTAxMjE5" end)()
local S375 = (function() return "RGlhbW9uZCBNb3A=" end)()
local S376 = (function() return "cmJ4YXNzZXRpZDovLzExNjg5ODM1MDk3ODE0OQ==" end)()
local S377 = (function() return "RnJ5aW5nIFBhbg==" end)()
local S378 = (function() return "cmJ4YXNzZXRpZDovLzg5MjAwMjg2NTMyNTI0" end)()
local S379 = (function() return "R29sZCBNb3A=" end)()
local S380 = (function() return "cmJ4YXNzZXRpZDovLzEyNjk3Mjk5NDEyNzAzOQ==" end)()
local S381 = (function() return "cmJ4YXNzZXRpZDovLzc4MDA3NDY3ODA1NTQ2" end)()
local S382 = (function() return "cmJ4YXNzZXRpZDovLzEzNzU2MDQ2MTgzOTQ5OQ==" end)()
local S383 = (function() return "TWV0YWwgQmFzZWJhbGwgQmF0" end)()
local S384 = (function() return "cmJ4YXNzZXRpZDovLzcwNjg1NDU5ODkxMzUz" end)()
local S385 = (function() return "TWV0YWwgUGlwZQ==" end)()
local S386 = (function() return "cmJ4YXNzZXRpZDovLzg4MDA5MjE4MDkyOTcz" end)()
local S387 = (function() return "cmJ4YXNzZXRpZDovLzcxNDg5MDMxOTI2NTk0" end)()
local S388 = (function() return "TmFpbGVkIFdvb2RlbiBCb2FyZA==" end)()
local S389 = (function() return "cmJ4YXNzZXRpZDovLzEzMzU4MjA4NDY3MDg2Ng==" end)()
local S390 = (function() return "UG9vbCBDdWU=" end)()
local S391 = (function() return "cmJ4YXNzZXRpZDovLzExNDQyMTU4ODQwOTUyNQ==" end)()
local S392 = (function() return "Um9sbGluZyBQaW4=" end)()
local S393 = (function() return "cmJ4YXNzZXRpZDovLzEwMjc3NTM3Nzc4MDA5MA==" end)()
local S394 = (function() return "UnVzdHkgU2hvdmVs" end)()
local S395 = (function() return "cmJ4YXNzZXRpZDovLzkyNzMzNzExOTU2NzY0" end)()
local S396 = (function() return "cmJ4YXNzZXRpZDovLzczOTYzMTcwODI5NDcz" end)()
local S397 = (function() return "cmJ4YXNzZXRpZDovLzczNDMxNDAwMjY0NzMz" end)()
local S398 = (function() return "U2lsdmVyIE1vcA==" end)()
local S399 = (function() return "cmJ4YXNzZXRpZDovLzgwMjYzMTk5NjIzMjA1" end)()
local S400 = (function() return "U2xlZGdlIEhhbW1lcg==" end)()
local S401 = (function() return "cmJ4YXNzZXRpZDovLzkzNTQ2NjgzMDczNTI3" end)()
local S402 = (function() return "cmJ4YXNzZXRpZDovLzkzMDYwNTE1NzM1ODY1" end)()
local S403 = (function() return "VGFjdGljYWwgQXhl" end)()
local S404 = (function() return "cmJ4YXNzZXRpZDovLzEyODUyMTQ3MjQ4Nzk2Nw==" end)()
local S405 = (function() return "VGFjdGljYWwgS25pZmU=" end)()
local S406 = (function() return "cmJ4YXNzZXRpZDovLzEzODE4ODQ2MzkxODkxMQ==" end)()
local S407 = (function() return "VGFjdGljYWwgU2hvdmVs" end)()
local S408 = (function() return "cmJ4YXNzZXRpZDovLzkyMzQzMDU3NzgxODcw" end)()
local S409 = (function() return "cmJ4YXNzZXRpZDovLzEyNTY4MTg5MjM0OTY5MQ==" end)()
local S410 = (function() return "VGlyZSBJcm9u" end)()
local S411 = (function() return "cmJ4YXNzZXRpZDovLzEyMDQ1MDA2OTcyOTg0OQ==" end)()
local S412 = (function() return "V29vZGVuIEJvYXJk" end)()
local S413 = (function() return "cmJ4YXNzZXRpZDovLzczMzAyNjMzOTc2ODcz" end)()
local S414 = (function() return "cmJ4YXNzZXRpZDovLzc4NjcxODM3MjQzNTI5" end)()
local S415 = (function() return "bnVtYmVy" end)()
local S416 = (function() return "V2VhcG9uRVNQQWRvcm5tZW50" end)()
local S417 = (function() return "VG9vbA==" end)()
local S418 = (function() return "QmFja3BhY2s=" end)()
local S419 = (function() return "QmlsbGJvYXJkR3Vp" end)()
local S420 = (function() return "V2VhcG9uRVNQQWRvcm5tZW50" end)()
local S421 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S422 = (function() return "RnJhbWU=" end)()
local S423 = (function() return "RnJhbWU=" end)()
local S424 = (function() return "VUlDb3JuZXI=" end)()
local S425 = (function() return "VUlHcmFkaWVudA==" end)()
local S426 = (function() return "VUlTdHJva2U=" end)()
local S427 = (function() return "SW1hZ2VMYWJlbA==" end)()
local S428 = (function() return "" end)()
local S429 = (function() return "V2VhcG9uRVNQQWRvcm5tZW50" end)()
local S430 = (function() return "V2VhcG9uIEVTUA==" end)()
local S431 = (function() return "U2hvd3Mgd2VhcG9ucyB0aGF0IG90aGVyIHBsYXllcnMgYXJlIGNhcnJ5aW5n" end)()
local S432 = (function() return "V2VhcG9uRVNQ" end)()
local S433 = (function() return "YWNjZWxlcmF0aW9u" end)()
local S434 = (function() return "YnJha2luZw==" end)()
local S435 = (function() return "ZGVjZWxlcmF0aW9u" end)()
local S436 = (function() return "Zm9yd2FyZE1heFNwZWVk" end)()
local S437 = (function() return "aGFuZEJyYWtlVG9ycXVl" end)()
local S438 = (function() return "bWF4U3BlZWRUb3JxdWU=" end)()
local S439 = (function() return "cmV2ZXJzZU1heFNwZWVk" end)()
local S440 = (function() return "U2xpZGVy" end)()
local S441 = (function() return "QXBwbHkgTW90b3IgQ2hhbmdlcw==" end)()
local S442 = (function() return "QXBwbHkgYWxsIHNsaWRlciB2YWx1ZXMgdG8gdmVoaWNsZSBtb3RvcnM=" end)()
local S443 = (function() return "VmVoaWNsZXM=" end)()
local S444 = (function() return "TW9kZWw=" end)()
local S445 = (function() return "Rm9sZGVy" end)()
local S446 = (function() return "TW90b3Jz" end)()
local S447 = (function() return "TW9kZWw=" end)()
local S448 = (function() return "Rm9sZGVy" end)()
local S449 = (function() return "SHVtYW5vaWQ=" end)()
local S450 = (function() return "U3BlZWRNdWx0aXBsaWVy" end)()
local S451 = (function() return "c3ByaW50" end)()
local S452 = (function() return "U3BlZWRNdWx0aXBsaWVy" end)()
local S453 = (function() return "SHVtYW5vaWQ=" end)()
local S454 = (function() return "U3BlZWRNdWx0aXBsaWVy" end)()
local S455 = (function() return "U3VwZXIgU3BlZWQ=" end)()
local S456 = (function() return "U3BlZWQgQm9vc3Q=" end)()
local S457 = (function() return "U3BlZWRCb29zdFRvZ2dsZQ==" end)()
local S458 = (function() return "SHVtYW5vaWQ=" end)()
local S459 = (function() return "U3VwZXIgSnVtcA==" end)()
local S460 = (function() return "SnVtcCBCb29zdA==" end)()
local S461 = (function() return "SnVtcEJvb3N0VG9nZ2xl" end)()
local S462 = (function() return "SHVtYW5vaWQ=" end)()
local S463 = (function() return "c3ByaW50" end)()
local S464 = (function() return "SHVtYW5vaWQ=" end)()
local S465 = (function() return "SW5maW5pdGUgU3RhbWluYQ==" end)()
local S466 = (function() return "TmV2ZXIgcnVuIG91dCBvZiBzdGFtaW5hIHdoaWxlIHNwcmludGluZw==" end)()
local S467 = (function() return "SW5maW5pdGVTdGFtaW5hVG9nZ2xl" end)()
local S468 = (function() return "RzM=" end)()
local S469 = (function() return "YWNjdXJhY3k=" end)()
local S470 = (function() return "ZmlyZVJhdGU=" end)()
local S471 = (function() return "bWFnU2l6ZQ==" end)()
local S472 = (function() return "cmFuZ2U=" end)()
local S473 = (function() return "cmVjb2ls" end)()
local S474 = (function() return "cmVsb2FkVGltZQ==" end)()
local S475 = (function() return "QUs0Nw==" end)()
local S476 = (function() return "YWNjdXJhY3k=" end)()
local S477 = (function() return "ZmlyZVJhdGU=" end)()
local S478 = (function() return "bWFnU2l6ZQ==" end)()
local S479 = (function() return "cmFuZ2U=" end)()
local S480 = (function() return "cmVjb2ls" end)()
local S481 = (function() return "cmVsb2FkVGltZQ==" end)()
local S482 = (function() return "QW5hY29uZGE=" end)()
local S483 = (function() return "YWNjdXJhY3k=" end)()
local S484 = (function() return "ZmlyZVJhdGU=" end)()
local S485 = (function() return "bWFnU2l6ZQ==" end)()
local S486 = (function() return "cmFuZ2U=" end)()
local S487 = (function() return "cmVjb2ls" end)()
local S488 = (function() return "cmVsb2FkVGltZQ==" end)()
local S489 = (function() return "Qzk=" end)()
local S490 = (function() return "YWNjdXJhY3k=" end)()
local S491 = (function() return "ZmlyZVJhdGU=" end)()
local S492 = (function() return "bWFnU2l6ZQ==" end)()
local S493 = (function() return "cmFuZ2U=" end)()
local S494 = (function() return "cmVjb2ls" end)()
local S495 = (function() return "cmVsb2FkVGltZQ==" end)()
local S496 = (function() return "Q3Jvc3Nib3c=" end)()
local S497 = (function() return "YWNjdXJhY3k=" end)()
local S498 = (function() return "ZmlyZVJhdGU=" end)()
local S499 = (function() return "bWFnU2l6ZQ==" end)()
local S500 = (function() return "cmFuZ2U=" end)()
local S501 = (function() return "cmVjb2ls" end)()
local S502 = (function() return "cmVsb2FkVGltZQ==" end)()
local S503 = (function() return "RG91YmxlIEJhcnJlbA==" end)()
local S504 = (function() return "YWNjdXJhY3k=" end)()
local S505 = (function() return "ZmlyZVJhdGU=" end)()
local S506 = (function() return "bWFnU2l6ZQ==" end)()
local S507 = (function() return "cmFuZ2U=" end)()
local S508 = (function() return "cmVjb2ls" end)()
local S509 = (function() return "cmVsb2FkVGltZQ==" end)()
local S510 = (function() return "RHJhY28=" end)()
local S511 = (function() return "YWNjdXJhY3k=" end)()
local S512 = (function() return "ZmlyZVJhdGU=" end)()
local S513 = (function() return "bWFnU2l6ZQ==" end)()
local S514 = (function() return "cmFuZ2U=" end)()
local S515 = (function() return "cmVjb2ls" end)()
local S516 = (function() return "cmVsb2FkVGltZQ==" end)()
local S517 = (function() return "RmlyZXdvcmsgTGF1bmNoZXI=" end)()
local S518 = (function() return "YWNjdXJhY3k=" end)()
local S519 = (function() return "ZmlyZVJhdGU=" end)()
local S520 = (function() return "bWFnU2l6ZQ==" end)()
local S521 = (function() return "cmFuZ2U=" end)()
local S522 = (function() return "cmVjb2ls" end)()
local S523 = (function() return "cmVsb2FkVGltZQ==" end)()
local S524 = (function() return "R2xvY2s=" end)()
local S525 = (function() return "YWNjdXJhY3k=" end)()
local S526 = (function() return "ZmlyZVJhdGU=" end)()
local S527 = (function() return "bWFnU2l6ZQ==" end)()
local S528 = (function() return "cmFuZ2U=" end)()
local S529 = (function() return "cmVjb2ls" end)()
local S530 = (function() return "cmVsb2FkVGltZQ==" end)()
local S531 = (function() return "SHVudGluZyBSaWZsZQ==" end)()
local S532 = (function() return "YWNjdXJhY3k=" end)()
local S533 = (function() return "ZmlyZVJhdGU=" end)()
local S534 = (function() return "bWFnU2l6ZQ==" end)()
local S535 = (function() return "cmFuZ2U=" end)()
local S536 = (function() return "cmVjb2ls" end)()
local S537 = (function() return "cmVsb2FkVGltZQ==" end)()
local S538 = (function() return "TTI0" end)()
local S539 = (function() return "YWNjdXJhY3k=" end)()
local S540 = (function() return "ZmlyZVJhdGU=" end)()
local S541 = (function() return "bWFnU2l6ZQ==" end)()
local S542 = (function() return "cmFuZ2U=" end)()
local S543 = (function() return "cmVjb2ls" end)()
local S544 = (function() return "cmVsb2FkVGltZQ==" end)()
local S545 = (function() return "TVA1" end)()
local S546 = (function() return "YWNjdXJhY3k=" end)()
local S547 = (function() return "ZmlyZVJhdGU=" end)()
local S548 = (function() return "bWFnU2l6ZQ==" end)()
local S549 = (function() return "cmFuZ2U=" end)()
local S550 = (function() return "cmVjb2ls" end)()
local S551 = (function() return "cmVsb2FkVGltZQ==" end)()
local S552 = (function() return "UDIyNg==" end)()
local S553 = (function() return "YWNjdXJhY3k=" end)()
local S554 = (function() return "ZmlyZVJhdGU=" end)()
local S555 = (function() return "bWFnU2l6ZQ==" end)()
local S556 = (function() return "cmFuZ2U=" end)()
local S557 = (function() return "cmVjb2ls" end)()
local S558 = (function() return "cmVsb2FkVGltZQ==" end)()
local S559 = (function() return "UlBH" end)()
local S560 = (function() return "YWNjdXJhY3k=" end)()
local S561 = (function() return "ZmlyZVJhdGU=" end)()
local S562 = (function() return "bWFnU2l6ZQ==" end)()
local S563 = (function() return "cmFuZ2U=" end)()
local S564 = (function() return "cmVjb2ls" end)()
local S565 = (function() return "cmVsb2FkVGltZQ==" end)()
local S566 = (function() return "UmVtaW5ndG9u" end)()
local S567 = (function() return "YWNjdXJhY3k=" end)()
local S568 = (function() return "ZmlyZVJhdGU=" end)()
local S569 = (function() return "bWFnU2l6ZQ==" end)()
local S570 = (function() return "cmFuZ2U=" end)()
local S571 = (function() return "cmVjb2ls" end)()
local S572 = (function() return "cmVsb2FkVGltZQ==" end)()
local S573 = (function() return "U2F3bm9mZg==" end)()
local S574 = (function() return "YWNjdXJhY3k=" end)()
local S575 = (function() return "ZmlyZVJhdGU=" end)()
local S576 = (function() return "bWFnU2l6ZQ==" end)()
local S577 = (function() return "cmFuZ2U=" end)()
local S578 = (function() return "cmVjb2ls" end)()
local S579 = (function() return "cmVsb2FkVGltZQ==" end)()
local S580 = (function() return "VXpp" end)()
local S581 = (function() return "YWNjdXJhY3k=" end)()
local S582 = (function() return "ZmlyZVJhdGU=" end)()
local S583 = (function() return "bWFnU2l6ZQ==" end)()
local S584 = (function() return "cmFuZ2U=" end)()
local S585 = (function() return "cmVjb2ls" end)()
local S586 = (function() return "cmVsb2FkVGltZQ==" end)()
local S587 = (function() return "bnVtYmVy" end)()
local S588 = (function() return "bnVtYmVy" end)()
local S589 = (function() return "VG9vbA==" end)()
local S590 = (function() return "VG9vbA==" end)()
local S591 = (function() return "VG9vbA==" end)()
local S592 = (function() return "VG9vbA==" end)()
local S593 = (function() return "VG9vbA==" end)()
local S594 = (function() return "VG9vbA==" end)()
local S595 = (function() return "VG9vbA==" end)()
local S596 = (function() return "QWNjdXJhY3kgTXVsdGlwbGllcg==" end)()
local S597 = (function() return "QWNjdXJhY3lNdWx0aXBsaWVyU2xpZGVy" end)()
local S598 = (function() return "RmlyZSBSYXRlIE11bHRpcGxpZXI=" end)()
local S599 = (function() return "RmlyZVJhdGVNdWx0aXBsaWVyU2xpZGVy" end)()
local S600 = (function() return "TWFnYXppbmUgU2l6ZSBNdWx0aXBsaWVy" end)()
local S601 = (function() return "TWFnU2l6ZU11bHRpcGxpZXJTbGlkZXI=" end)()
local S602 = (function() return "UmFuZ2UgTXVsdGlwbGllcg==" end)()
local S603 = (function() return "UmFuZ2VNdWx0aXBsaWVyU2xpZGVy" end)()
local S604 = (function() return "UmVjb2lsIE11bHRpcGxpZXI=" end)()
local S605 = (function() return "UmVjb2lsTXVsdGlwbGllclNsaWRlcg==" end)()
local S606 = (function() return "UmVsb2FkIFRpbWUgTXVsdGlwbGllcg==" end)()
local S607 = (function() return "UmVsb2FkVGltZU11bHRpcGxpZXJTbGlkZXI=" end)()
local S608 = (function() return "R3VuIE1vZGlmaWVy" end)()
local S609 = (function() return "RW5hYmxlL0Rpc2FibGUgZ3VuIG1vZGlmaWNhdGlvbnM=" end)()
local S610 = (function() return "R3VuTW9kaWZpZXJUb2dnbGU=" end)()
local S611 = (function() return "RGVhdGhTY3JlZW4=" end)()
local S612 = (function() return "RGVhdGhTY3JlZW5Ib2xkZXI=" end)()
local S613 = (function() return "RnJhbWU=" end)()
local S614 = (function() return "UmVzcGF3bkJ1dHRvbkZyYW1l" end)()
local S615 = (function() return "UmVzcGF3bkJ1dHRvbg==" end)()
local S616 = (function() return "R3VpU2VydmljZQ==" end)()
local S617 = (function() return "VmlydHVhbElucHV0TWFuYWdlcg==" end)()
local S618 = (function() return "SHVtYW5vaWQ=" end)()
local S619 = (function() return "UGxheWVyR3Vp" end)()
local S620 = (function() return "RGVhdGhTY3JlZW4=" end)()
local S621 = (function() return "SHVtYW5vaWQ=" end)()
local S622 = (function() return "SHVtYW5vaWQ=" end)()
local S623 = (function() return "QXV0byBSZXNwYXdu" end)()
local S624 = (function() return "QXV0b21hdGljYWxseSByZXNwYXduIHdoZW4geW91IGRpZQ==" end)()
local S625 = (function() return "QXV0b1Jlc3Bhd25Ub2dnbGU=" end)()
local S626 = (function() return "Q2lyY2xl" end)()
local S627 = (function() return "SGVhZA==" end)()
local S628 = (function() return "SGVhZA==" end)()
local S629 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S630 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S631 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S632 = (function() return "SGVhZA==" end)()
local S633 = (function() return "RW5hYmxlIEFpbWJvdA==" end)()
local S634 = (function() return "SG9sZCBMZWZ0IENvbnRyb2wgdG8gYWN0aXZhdGUgYWltYm90" end)()
local S635 = (function() return "QWltYm90VG9nZ2xl" end)()
local S636 = (function() return "Rk9WIFJhZGl1cw==" end)()
local S637 = (function() return "Rk9WU2xpZGVy" end)()
local S638 = (function() return "U2hvdyBGT1YgQ2lyY2xl" end)()
local S639 = (function() return "VG9nZ2xlIEZPViBjaXJjbGUgdmlzaWJpbGl0eQ==" end)()
local S640 = (function() return "Rk9WVG9nZ2xl" end)()
local S641 = (function() return "V2hpdGVsaXN0IFBsYXllcnM=" end)()
local S642 = (function() return "U2VsZWN0IHBsYXllcnMgdG8gaWdub3JlIHdoZW4gYWltaW5n" end)()
local S643 = (function() return "dGFibGU=" end)()
local S644 = (function() return "V2hpdGVsaXN0RHJvcGRvd24=" end)()
local S645 = (function() return "QXhl" end)()
local S646 = (function() return "QmFyYmVkIEJhc2ViYWxsIEJhdA==" end)()
local S647 = (function() return "QmFzZWJhbGwgQmF0" end)()
local S648 = (function() return "QmlrZSBMb2Nr" end)()
local S649 = (function() return "QnJvbnplIE1vcA==" end)()
local S650 = (function() return "Q2hhaXIgTGVn" end)()
local S651 = (function() return "QnV0Y2hlciBLbmlmZQ==" end)()
local S652 = (function() return "Q29tYmF0IEF4ZQ==" end)()
local S653 = (function() return "Q3Jvd2Jhcg==" end)()
local S654 = (function() return "RGlhbW9uZCBNb3A=" end)()
local S655 = (function() return "RnJ5aW5nIFBhbg==" end)()
local S656 = (function() return "R29sZCBNb3A=" end)()
local S657 = (function() return "SGFtbWVy" end)()
local S658 = (function() return "TWFjaGV0dGU=" end)()
local S659 = (function() return "TWV0YWwgQmFzZWJhbGwgQmF0" end)()
local S660 = (function() return "TWV0YWwgUGlwZQ==" end)()
local S661 = (function() return "TW9w" end)()
local S662 = (function() return "TmFpbGVkIFdvb2RlbiBCb2FyZA==" end)()
local S663 = (function() return "UG9vbCBDdWU=" end)()
local S664 = (function() return "Um9sbGluZyBQaW4=" end)()
local S665 = (function() return "UnVzdHkgU2hvdmVs" end)()
local S666 = (function() return "U2hhbms=" end)()
local S667 = (function() return "U2hvdmVs" end)()
local S668 = (function() return "U2lsdmVyIE1vcA==" end)()
local S669 = (function() return "U2xlZGdlIEhhbW1lcg==" end)()
local S670 = (function() return "U3dpdGNoYmxhZGU=" end)()
local S671 = (function() return "VGFjdGljYWwgQXhl" end)()
local S672 = (function() return "VGFjdGljYWwgS25pZmU=" end)()
local S673 = (function() return "VGFjdGljYWwgU2hvdmVs" end)()
local S674 = (function() return "VGFzZXI=" end)()
local S675 = (function() return "VGlyZSBJcm9u" end)()
local S676 = (function() return "V29vZGVuIEJvYXJk" end)()
local S677 = (function() return "V3JlbmNo" end)()
local S678 = (function() return "RmlzdHM=" end)()
local S679 = (function() return "bnVtYmVy" end)()
local S680 = (function() return "bnVtYmVy" end)()
local S681 = (function() return "VG9vbA==" end)()
local S682 = (function() return "VG9vbA==" end)()
local S683 = (function() return "VG9vbA==" end)()
local S684 = (function() return "TWVsZWUgV2VhcG9uIE1vZGlmaWVy" end)()
local S685 = (function() return "TW9kaWZpZXMgbWVsZWUgd2VhcG9uIHNwZWVkIGFuZCByYW5nZSBhdHRyaWJ1dGVz" end)()
local S686 = (function() return "TWVsZWVNb2RpZmllcg==" end)()
local S687 = (function() return "V2VhcG9uIFJhbmdl" end)()
local S688 = (function() return "V2VhcG9uUmFuZ2U=" end)()
local S689 = (function() return "QXV0byBGaW5pc2g=" end)()
local S690 = (function() return "RmluaXNoIGRvd25lZCBwbGF5ZXJzIChleGNlcHQgd2hpdGVsaXN0ZWQp" end)()
local S691 = (function() return "QXV0b0ZpbmlzaFRvZ2dsZQ==" end)()
local S692 = (function() return "RmluaXNoIERpc3RhbmNl" end)()
local S693 = (function() return "QXV0b0ZpbmlzaERpc3RhbmNl" end)()
local S694 = (function() return "V2hpdGVsaXN0IFBsYXllcnM=" end)()
local S695 = (function() return "U2VsZWN0IHBsYXllcnMgdG8gTk9UIGF1dG8gZmluaXNo" end)()
local S696 = (function() return "dGFibGU=" end)()
local S697 = (function() return "QXV0b0ZpbmlzaFdoaXRlbGlzdA==" end)()
local S698 = (function() return "SHVtYW5vaWRSb290UGFydA==" end)()
local S699 = (function() return "RmluaXNoUHJvbXB0" end)()
local S700 = (function() return "UHJveGltaXR5UHJvbXB0" end)()
local S701 = (function() return "cyBrZXkgd2lsbCBiZSBzYXZlZCwgYnV0IGlmIHlvdSBjaGFuZ2UgdGhlIGtleSwgdGhleSB3aWxsIGJlIHVuYWJsZSB0byB1c2UgeW91ciBzY3JpcHQKCQlLZXkgPSB7UzEyfSwgLS0gTGlzdCBvZiBrZXlzIHRoYXQgd2lsbCBiZSBhY2NlcHRlZCBieSB0aGUgc3lzdGVtLCBwbGVhc2UgdXNlIGEgc3lzdGVtIGxpa2UgUGVsaWNhbiBvciBMdWFybW9yIHRoYXQgcHJvdmlkZSBrZXkgc3RyaW5ncyBiYXNlZCBvbiB5b3VyIEhXSUQgc2luY2UgcHV0dGluZyBhIHNpbXBsZSBzdHJpbmcgaXMgdmVyeSBlYXN5IHRvIGJ5cGFzcwoJCVNlY29uZEFjdGlvbiA9IHsKCQkJRW5hYmxlZCA9IGZhbHNlLCAtLSBTZXQgdG8gZmFsc2UgaWYgeW91IGRvIG5vdCB3YW50IGEgc2Vjb25kIGFjdGlvbiwKCQkJVHlwZSA9IFMxMywgLS0gTGluayAvIERpc2NvcmQuCgkJCVBhcmFtZXRlciA9IFMxNCAtLSBJZiBUeXBlIGlzIERpc2NvcmQsIHRoZW4gcHV0IHlvdXIgaW52aXRlIGxpbmsgKERPIE5PVCBQVVQgRElTQ09SRC5HRy8pLiBFbHNlLCBwdXQgdGhlIGZ1bGwgbGluayBvZiB5b3VyIGtleSBzeXN0ZW0gaGVyZS4KCQl9Cgl9Cn0pCgotLSBDcmVhdGUgVGFicwpsb2NhbCBQbGF5ZXIgPSBXaW5kb3c6Q3JlYXRlVGFiKHsKCU5hbWUgPSBTMTUsCglJY29uID0gUzE2LAoJSW1hZ2VTb3VyY2UgPSBTMTcsCglTaG93VGl0bGUgPSB0cnVlCn0pCgpsb2NhbCBBaW1ib3QgPSBXaW5kb3c6Q3JlYXRlVGFiKHsKCU5hbWUgPSBTMTgsCglJY29uID0gUzE5LAoJSW1hZ2VTb3VyY2UgPSBTMjAsCglTaG93VGl0bGUgPSB0cnVlCn0pCgpsb2NhbCBWaXN1YWxzID0gV2luZG93OkNyZWF0ZVRhYih7CglOYW1lID0gUzIxLAoJSWNvbiA9IFMyMiwKCUltYWdlU291cmNlID0gUzIzLAoJU2hvd1RpdGxlID0gdHJ1ZQp9KQoKbG9jYWwgQ29tYmF0ID0gV2luZG93OkNyZWF0ZVRhYih7CglOYW1lID0gUzI0LAoJSWNvbiA9IFMyNSwKCUltYWdlU291cmNlID0gUzI2LAoJU2hvd1RpdGxlID0gdHJ1ZQp9KQoKbG9jYWwgV2VhcG9uID0gV2luZG93OkNyZWF0ZVRhYih7CglOYW1lID0gUzI3LAoJSWNvbiA9IFMyOCwKCUltYWdlU291cmNlID0gUzI5LAoJU2hvd1RpdGxlID0gdHJ1ZQp9KQoKbG9jYWwgVmVoaWNsZSA9IFdpbmRvdzpDcmVhdGVUYWIoewoJTmFtZSA9IFMzMCwKCUljb24gPSBTMzEsCglJbWFnZVNvdXJjZSA9IFMzMiwKCVNob3dUaXRsZSA9IHRydWUKfSkKCmxvY2FsIEpvYkF1dG9GYXJtID0gV2luZG93OkNyZWF0ZVRhYih7CglOYW1lID0gUzMzLAoJSWNvbiA9IFMzNCwKCUltYWdlU291cmNlID0gUzM1LAoJU2hvd1RpdGxlID0gdHJ1ZQp9KQoKCmxvY2FsIFBhcmFncmFwaCA9IEpvYkF1dG9GYXJtOkNyZWF0ZVBhcmFncmFwaCh7CglUaXRsZSA9IFMzNiwKCVRleHQgPSBTMzcKfSkKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSBKT0IgQVVUT0ZBUk0gU0NSSVBUIChPcHRpbWl6ZWQpCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKLS0gQ29uc29saWRhdGVkIHN0YXRlIG1hbmFnZW1lbnQKbG9jYWwgSm9iQXV0b0Zhcm1fU3RhdGUgPSB7CiAgICBydW5uaW5nID0gZmFsc2UsCiAgICBjb25uZWN0aW9ucyA9IHt9LAogICAgY3VycmVudFR3ZWVuID0gbmlsLAogICAgbG9jYXRpb24gPSBWZWN0b3IzLm5ldygxMzQuMDMyLCAyNTUuNDY3LCAyMDguNjE0KQp9CgotLSBGdW5jdGlvbiB0byBnZXQgY3VycmVudCBjaGFyYWN0ZXIgcmVmZXJlbmNlcwpsb2NhbCBmdW5jdGlvbiBnZXRDaGFyYWN0ZXJSZWZlcmVuY2VzKCkKICAgIGxvY2FsIGNoYXIgPSBwbGF5ZXIuQ2hhcmFjdGVyCiAgICBpZiBub3QgY2hhciB0aGVuIHJldHVybiBuaWwsIG5pbCwgbmlsIGVuZAogICAgCiAgICByZXR1cm4gY2hhciwgY2hhcjpGaW5kRmlyc3RDaGlsZChTMzgpLCBjaGFyOkZpbmRGaXJzdENoaWxkKFMzOSkKZW5kCgotLSBGdW5jdGlvbiB0byB3YWl0IGZvciBjaGFyYWN0ZXIgdG8gbG9hZApsb2NhbCBmdW5jdGlvbiB3YWl0Rm9yQ2hhcmFjdGVyKCkKICAgIGxvY2FsIGNoYXIgPSBwbGF5ZXIuQ2hhcmFjdGVyIG9yIHBsYXllci5DaGFyYWN0ZXJBZGRlZDpXYWl0KCkKICAgIGxvY2FsIGh1bSA9IGNoYXI6V2FpdEZvckNoaWxkKFM0MCwgMTApCiAgICBsb2NhbCByb290ID0gY2hhcjpXYWl0Rm9yQ2hpbGQoUzQxLCAxMCkKICAgIAogICAgaWYgbm90IGh1bSBvciBub3Qgcm9vdCB0aGVuCiAgICAgICAgd2FybihTNDIpCiAgICAgICAgcmV0dXJuIG5pbCwgbmlsLCBuaWwKICAgIGVuZAogICAgCiAgICByZXR1cm4gY2hhciwgaHVtLCByb290CmVuZAoKLS0gRnVuY3Rpb24gdG8gY2xlYW4gdXAgYWxsIGNvbm5lY3Rpb25zIGFuZCB0d2VlbnMKbG9jYWwgZnVuY3Rpb24gY2xlYW51cCgpCiAgICBwcmludChTNDMpCiAgICAKICAgIC0tIENhbmNlbCBhbnkgYWN0aXZlIHR3ZWVuCiAgICBpZiBKb2JBdXRvRmFybV9TdGF0ZS5jdXJyZW50VHdlZW4gdGhlbgogICAgICAgIEpvYkF1dG9GYXJtX1N0YXRlLmN1cnJlbnRUd2VlbjpDYW5jZWwoKQogICAgICAgIEpvYkF1dG9GYXJtX1N0YXRlLmN1cnJlbnRUd2VlbiA9IG5pbAogICAgZW5kCiAgICAKICAgIC0tIERpc2Nvbm5lY3QgYWxsIGNvbm5lY3Rpb25zCiAgICBmb3IgXywgY29ubmVjdGlvbiBpbiBwYWlycyhKb2JBdXRvRmFybV9TdGF0ZS5jb25uZWN0aW9ucykgZG8KICAgICAgICBpZiBjb25uZWN0aW9uIHRoZW4KICAgICAgICAgICAgY29ubmVjdGlvbjpEaXNjb25uZWN0KCkKICAgICAgICBlbmQKICAgIGVuZAogICAgSm9iQXV0b0Zhcm1fU3RhdGUuY29ubmVjdGlvbnMgPSB7fQogICAgCiAgICBwcmludChTNDQpCmVuZAoKLS0gRnVuY3Rpb24gdG8gaGFuZGxlIGNoYXJhY3RlciBkZWF0aApsb2NhbCBmdW5jdGlvbiBvbkNoYXJhY3RlckRpZWQoKQogICAgcHJpbnQoUzQ1KQogICAgCiAgICAtLSBEb24=" end)()
local S702 = (function() return "dmUgcmVhY2hlZCB0aGUgZmluYWwgd2F5cG9pbnQKICAgICAgICAgICAgaWYgaSA9PSAjcGF0aDpHZXRXYXlwb2ludHMoKSBhbmQgSm9iQXV0b0Zhcm1fU3RhdGUucnVubmluZyB0aGVuCiAgICAgICAgICAgICAgICBwcmludChTNTEpCiAgICAgICAgICAgIGVuZAogICAgICAgIGVuZAogICAgZWxzZQogICAgICAgIGlmIG5vdCBKb2JBdXRvRmFybV9TdGF0ZS5ydW5uaW5nIHRoZW4gcmV0dXJuIGZhbHNlIGVuZAogICAgICAgIAogICAgICAgIHdhcm4oUzUyLCBlcnJvck1lc3NhZ2UpCiAgICAgICAgCiAgICAgICAgLS0gSWYgcGF0aCBjb21wdXRhdGlvbiBmYWlscywganVzdCB0d2VlbiBkaXJlY3RseSB0byB0YXJnZXQgd2l0aCBmaXhlZCBZCiAgICAgICAgcHJpbnQoUzUzKQogICAgICAgIGlmIG5vdCB0d2VlblRvUG9zaXRpb24odGFyZ2V0UG9zaXRpb24pIHRoZW4gcmV0dXJuIGZhbHNlIGVuZAogICAgZW5kCiAgICAKICAgIGlmIG5vdCBKb2JBdXRvRmFybV9TdGF0ZS5ydW5uaW5nIHRoZW4gcmV0dXJuIGZhbHNlIGVuZAogICAgCiAgICAtLSBNYWtlIHN1cmUgd2U=" end)()
local S703 = (function() return "dCBibG9jawogICAgICAgICAgICBzcGF3bihmdW5jdGlvbigpCiAgICAgICAgICAgICAgICBzdGFydEF1dG9GYXJtKCkKICAgICAgICAgICAgZW5kKQogICAgICAgIGVsc2UKICAgICAgICAgICAgcHJpbnQoUzg4KQogICAgICAgICAgICBjbGVhbnVwKCkKICAgICAgICBlbmQKICAgIGVuZAp9LCBTODkpCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSBKQU5JVE9SIEFVVE9GQVJNIFNDUklQVCAoT3B0aW1pemVkKQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCi0tIENvbnNvbGlkYXRlZCBzdGF0ZSBtYW5hZ2VtZW50IGZvciBqYW5pdG9yCmxvY2FsIEphbml0b3JGYXJtX1N0YXRlID0gewogICAgcnVubmluZyA9IGZhbHNlLAogICAgY29ubmVjdGlvbnMgPSB7fSwKICAgIGN1cnJlbnRUd2VlbiA9IG5pbCwKICAgIHlQb3NpdGlvbk1haW50ZW5hbmNlID0gZmFsc2UsCiAgICB0YXJnZXRQYXJ0ID0gd29ya3NwYWNlLkJ1cmdlUGxhY2VCZWFjb24uVG91Y2hQYXJ0LAogICAgY29uZmlnID0gewogICAgICAgIGZpeGVkWVBvc2l0aW9uID0gMjU1LjQsCiAgICAgICAgdHdlZW5TcGVlZCA9IDAuMywKICAgICAgICB3YWl0VGltZVBlclB1ZGRsZSA9IDUsCiAgICAgICAgbG9vcFdhaXRUaW1lID0gMAogICAgfQp9CgotLSBGdW5jdGlvbiB0byBnZXQgY3VycmVudCBjaGFyYWN0ZXIgcmVmZXJlbmNlcyBmb3IgamFuaXRvcgpsb2NhbCBmdW5jdGlvbiBnZXRKYW5pdG9yQ2hhcmFjdGVyUmVmZXJlbmNlcygpCiAgICBsb2NhbCBjaGFyID0gcGxheWVyLkNoYXJhY3RlcgogICAgaWYgbm90IGNoYXIgdGhlbiByZXR1cm4gbmlsLCBuaWwsIG5pbCBlbmQKICAgIAogICAgcmV0dXJuIGNoYXIsIGNoYXI6RmluZEZpcnN0Q2hpbGQoUzkwKSwgY2hhcjpGaW5kRmlyc3RDaGlsZChTOTEpCmVuZAoKLS0gRnVuY3Rpb24gdG8gd2FpdCBmb3IgY2hhcmFjdGVyIHRvIGxvYWQgZm9yIGphbml0b3IKbG9jYWwgZnVuY3Rpb24gd2FpdEZvckphbml0b3JDaGFyYWN0ZXIoKQogICAgbG9jYWwgY2hhciA9IHBsYXllci5DaGFyYWN0ZXIgb3IgcGxheWVyLkNoYXJhY3RlckFkZGVkOldhaXQoKQogICAgbG9jYWwgaHVtID0gY2hhcjpXYWl0Rm9yQ2hpbGQoUzkyLCAxMCkKICAgIGxvY2FsIHJvb3QgPSBjaGFyOldhaXRGb3JDaGlsZChTOTMsIDEwKQogICAgCiAgICBpZiBub3QgaHVtIG9yIG5vdCByb290IHRoZW4KICAgICAgICB3YXJuKFM5NCkKICAgICAgICByZXR1cm4gbmlsLCBuaWwsIG5pbAogICAgZW5kCiAgICAKICAgIHJldHVybiBjaGFyLCBodW0sIHJvb3QKZW5kCgotLSBGdW5jdGlvbiB0byBjbGVhbiB1cCBqYW5pdG9yIGNvbm5lY3Rpb25zIGFuZCB0d2VlbnMKbG9jYWwgZnVuY3Rpb24gamFuaXRvckNsZWFudXAoKQogICAgcHJpbnQoUzk1KQogICAgCiAgICAtLSBDYW5jZWwgYW55IGFjdGl2ZSB0d2VlbgogICAgaWYgSmFuaXRvckZhcm1fU3RhdGUuY3VycmVudFR3ZWVuIHRoZW4KICAgICAgICBKYW5pdG9yRmFybV9TdGF0ZS5jdXJyZW50VHdlZW46Q2FuY2VsKCkKICAgICAgICBKYW5pdG9yRmFybV9TdGF0ZS5jdXJyZW50VHdlZW4gPSBuaWwKICAgIGVuZAogICAgCiAgICAtLSBTdG9wIFkgcG9zaXRpb24gbWFpbnRlbmFuY2UKICAgIEphbml0b3JGYXJtX1N0YXRlLnlQb3NpdGlvbk1haW50ZW5hbmNlID0gZmFsc2UKICAgIAogICAgLS0gRGlzY29ubmVjdCBhbGwgY29ubmVjdGlvbnMKICAgIGZvciBfLCBjb25uZWN0aW9uIGluIHBhaXJzKEphbml0b3JGYXJtX1N0YXRlLmNvbm5lY3Rpb25zKSBkbwogICAgICAgIGlmIGNvbm5lY3Rpb24gdGhlbgogICAgICAgICAgICBjb25uZWN0aW9uOkRpc2Nvbm5lY3QoKQogICAgICAgIGVuZAogICAgZW5kCiAgICBKYW5pdG9yRmFybV9TdGF0ZS5jb25uZWN0aW9ucyA9IHt9CiAgICAKICAgIHByaW50KFM5NikKZW5kCgotLSBGdW5jdGlvbiB0byBoYW5kbGUgY2hhcmFjdGVyIGRlYXRoIGZvciBqYW5pdG9yCmxvY2FsIGZ1bmN0aW9uIG9uSmFuaXRvckNoYXJhY3RlckRpZWQoKQogICAgcHJpbnQoUzk3KQogICAgCiAgICAtLSBEb24=" end)()
local S704 = (function() return "" end)()
local S705 = (function() return "dmUgcmVhY2hlZCB0YXJnZXQgbGV2ZWxzCiAgICBpZiBBVE1IYWNrX1N0YXRlLlNsaWRlck1pbmlnYW1lLmxldmVsLmdldCgpID49IEFUTUhhY2tfU3RhdGUuU2xpZGVyTWluaWdhbWUubGV2ZWxzLmdldCgpIHRoZW4KICAgICAgICBBVE1IYWNrX1N0YXRlLlNsaWRlck1pbmlnYW1lLndpbjpGaXJlKHRydWUpCiAgICBlbmQKZW5kCgotLSBBVE0gSGFjayBjbGVhbnVwIGZ1bmN0aW9uCmxvY2FsIGZ1bmN0aW9uIGF0bUhhY2tDbGVhbnVwKCkKICAgIHByaW50KFMyMTkpCiAgICBBVE1IYWNrX1N0YXRlLnJ1bm5pbmcgPSBmYWxzZQogICAgaWYgQVRNSGFja19TdGF0ZS5sb29wIHRoZW4KICAgICAgICBBVE1IYWNrX1N0YXRlLmxvb3AgPSBuaWwKICAgIGVuZAogICAgcHJpbnQoUzIyMCkKZW5kCgotLSBTdGFydCBBVE0gaGFjayBmdW5jdGlvbgpsb2NhbCBmdW5jdGlvbiBzdGFydEFUTUhhY2soKQogICAgcHJpbnQoUzIyMSkKICAgIAogICAgLS0gTWFpbiBsb29wCiAgICBBVE1IYWNrX1N0YXRlLmxvb3AgPSB0YXNrLnNwYXduKGZ1bmN0aW9uKCkKICAgICAgICB3aGlsZSBBVE1IYWNrX1N0YXRlLnJ1bm5pbmcgZG8KICAgICAgICAgICAgLS0gTWluaW1hbCB3YWl0IHRpbWUKICAgICAgICAgICAgdGFzay53YWl0KDAuMDEpCiAgICAgICAgICAgIAogICAgICAgICAgICAtLSBBdXRvLXdpbiBsb2dpYwogICAgICAgICAgICBsb2NhbCBzdWNjZXNzLCBlcnIgPSBwY2FsbChhdXRvV2luQVRNSGFjaykKICAgICAgICAgICAgaWYgbm90IHN1Y2Nlc3MgdGhlbgogICAgICAgICAgICAgICAgd2FybihTMjIyIC4uIHRvc3RyaW5nKGVycikpCiAgICAgICAgICAgIGVuZAogICAgICAgIGVuZAogICAgZW5kKQplbmQKCi0tIENyZWF0ZSBBVE0gSGFjayBUb2dnbGUKbG9jYWwgQVRNSGFja1RvZ2dsZSA9IEpvYkF1dG9GYXJtOkNyZWF0ZVRvZ2dsZSh7CglOYW1lID0gUzIyMywKCURlc2NyaXB0aW9uID0gbmlsLAoJQ3VycmVudFZhbHVlID0gZmFsc2UsCiAgICBDYWxsYmFjayA9IGZ1bmN0aW9uKFZhbHVlKQogICAgICAgIEFUTUhhY2tfU3RhdGUucnVubmluZyA9IFZhbHVlCiAgICAgICAgCiAgICAgICAgaWYgQVRNSGFja19TdGF0ZS5ydW5uaW5nIHRoZW4KICAgICAgICAgICAgcHJpbnQoUzIyNCkKICAgICAgICAgICAgLS0gUnVuIHRoZSBoYWNrIGluIGEgc2VwYXJhdGUgdGhyZWFkIHNvIGl0IGRvZXNu" end)()
local S706 = (function() return "dCBjcmVhdGUgaWYgYWxyZWFkeSBleGlzdHMKICAgIAogICAgbG9jYWwgYmlsbGJvYXJkR3VpID0gSW5zdGFuY2UubmV3KFMyNjApCiAgICBiaWxsYm9hcmRHdWkuTmFtZSA9IFMyNjEKICAgIGJpbGxib2FyZEd1aS5QYXJlbnQgPSBoZWFkCiAgICBiaWxsYm9hcmRHdWkuU2l6ZSA9IFVEaW0yLm5ldygwLCAxMDAsIDAsIDIwKQogICAgYmlsbGJvYXJkR3VpLlN0dWRzT2Zmc2V0ID0gVmVjdG9yMy5uZXcoMCwgMiwgMCkKICAgIGJpbGxib2FyZEd1aS5BbHdheXNPblRvcCA9IHRydWUKICAgIGJpbGxib2FyZEd1aS5MaWdodEluZmx1ZW5jZSA9IDAKICAgIGJpbGxib2FyZEd1aS5TaXplT2Zmc2V0ID0gVmVjdG9yMi5uZXcoMCwgMCkKICAgIAogICAgbG9jYWwgbmFtZUxhYmVsID0gSW5zdGFuY2UubmV3KFMyNjIpCiAgICBuYW1lTGFiZWwuUGFyZW50ID0gYmlsbGJvYXJkR3VpCiAgICBuYW1lTGFiZWwuU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAxLCAwKQogICAgbmFtZUxhYmVsLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxCiAgICBuYW1lTGFiZWwuVGV4dCA9IG5hbWVQbGF5ZXIuTmFtZQogICAgbmFtZUxhYmVsLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQogICAgbmFtZUxhYmVsLlRleHRTaXplID0gMTIKICAgIG5hbWVMYWJlbC5Gb250ID0gRW51bS5Gb250LlNvdXJjZVNhbnNCb2xkCiAgICBuYW1lTGFiZWwuVGV4dFN0cm9rZVRyYW5zcGFyZW5jeSA9IDAKICAgIG5hbWVMYWJlbC5UZXh0U3Ryb2tlQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMCwgMCwgMCkKZW5kCgpsb2NhbCBmdW5jdGlvbiByZW1vdmVBbGxOYW1lVGFncygpCiAgICBmb3IgXywgbmFtZVBsYXllciBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwogICAgICAgIGlmIG5hbWVQbGF5ZXIuQ2hhcmFjdGVyIHRoZW4KICAgICAgICAgICAgbG9jYWwgaGVhZCA9IG5hbWVQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKFMyNjMpCiAgICAgICAgICAgIGlmIGhlYWQgdGhlbgogICAgICAgICAgICAgICAgbG9jYWwgbmFtZVRhZyA9IGhlYWQ6RmluZEZpcnN0Q2hpbGQoUzI2NCkKICAgICAgICAgICAgICAgIGlmIG5hbWVUYWcgdGhlbgogICAgICAgICAgICAgICAgICAgIG5hbWVUYWc6RGVzdHJveSgpCiAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgZW5kCiAgICAgICAgZW5kCiAgICBlbmQKZW5kCgotLSBOYW1lIHRhZ3MgY2xlYW51cCBmdW5jdGlvbgpsb2NhbCBmdW5jdGlvbiBuYW1lVGFnc0NsZWFudXAoKQogICAgLS0gU3RvcCB0aGUgY29ubmVjdGlvbgogICAgaWYgTmFtZVRhZ3NfU3RhdGUuY29ubmVjdGlvbiB0aGVuCiAgICAgICAgTmFtZVRhZ3NfU3RhdGUuY29ubmVjdGlvbjpEaXNjb25uZWN0KCkKICAgICAgICBOYW1lVGFnc19TdGF0ZS5jb25uZWN0aW9uID0gbmlsCiAgICBlbmQKICAgIAogICAgLS0gUmVtb3ZlIGFsbCBleGlzdGluZyBuYW1lIHRhZ3MKICAgIHJlbW92ZUFsbE5hbWVUYWdzKCkKZW5kCgotLSBTdGFydCBuYW1lIHRhZ3MgZnVuY3Rpb24KbG9jYWwgZnVuY3Rpb24gc3RhcnROYW1lVGFncygpCiAgICAtLSBTdGFydCB0aGUgbmFtZSB0YWcgc3lzdGVtCiAgICBOYW1lVGFnc19TdGF0ZS5jb25uZWN0aW9uID0gcnVuU2VydmljZS5IZWFydGJlYXQ6Q29ubmVjdChmdW5jdGlvbigpCiAgICAgICAgaWYgTmFtZVRhZ3NfU3RhdGUuZW5hYmxlZCB0aGVuCiAgICAgICAgICAgIGZvciBfLCBuYW1lUGxheWVyIGluIHBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCiAgICAgICAgICAgICAgICBpZiBuYW1lUGxheWVyIH49IHBsYXllciBhbmQgbmFtZVBsYXllci5DaGFyYWN0ZXIgdGhlbgogICAgICAgICAgICAgICAgICAgIGNyZWF0ZU5hbWVUYWcobmFtZVBsYXllcikKICAgICAgICAgICAgICAgIGVuZAogICAgICAgICAgICBlbmQKICAgICAgICBlbmQKICAgIGVuZCkKZW5kCgotLSBDcmVhdGUgTmFtZSBUYWdzIFRvZ2dsZQpsb2NhbCBOYW1lVGFnc1RvZ2dsZSA9IFZpc3VhbHM6Q3JlYXRlVG9nZ2xlKHsKCU5hbWUgPSBTMjY1LAoJRGVzY3JpcHRpb24gPSBuaWwsCglDdXJyZW50VmFsdWUgPSBmYWxzZSwKICAgIENhbGxiYWNrID0gZnVuY3Rpb24oVmFsdWUpCiAgICAgICAgTmFtZVRhZ3NfU3RhdGUuZW5hYmxlZCA9IFZhbHVlCiAgICAgICAgCiAgICAgICAgaWYgTmFtZVRhZ3NfU3RhdGUuZW5hYmxlZCB0aGVuCiAgICAgICAgICAgIC0tIFJ1biB0aGUgbmFtZSB0YWdzIGluIGEgc2VwYXJhdGUgdGhyZWFkIHNvIGl0IGRvZXNu" end)()
local S707 = (function() return "dCBuZWVkIHRvIGJlIGRpc2Nvbm5lY3RlZCBzaW5jZSBpdA==" end)()
local S708 = (function() return "dCBuZWVkIHRvIGJlIGRpc2Nvbm5lY3RlZCBzaW5jZSBpdA==" end)()

-- Load Luna UI Library
local Luna = loadstring(game:HttpGet(S0, true))()

---------------------------------------------------------------------------------------------
-- BASIC LOCALS & SERVICES (Reusable for other scripts)
---------------------------------------------------------------------------------------------

-- Player & Character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild(S1)
local hrp = character:WaitForChild(S2)

-- Services
local pathfindingService = game:GetService(S3)
local tweenService = game:GetService("TweenService")
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

---------------------------------------------------------------------------------------------
-- UI WINDOW & TABS
---------------------------------------------------------------------------------------------

local Window = Luna:CreateWindow({
	Name = S4, -- This Is Title Of Your Window
	Subtitle = nil, -- A Gray Subtitle next To the main title.
	LogoID = S5, -- The Asset ID of your logo. Set to nil if you do not have a logo for Luna to use.
	LoadingEnabled = true, -- Whether to enable the loading animation. Set to false if you do not want the loading screen or have your own custom one.
	LoadingTitle = S6, -- Header for loading screen
	LoadingSubtitle = S7, -- Subtitle for loading screen

	ConfigSettings = {
		RootFolder = nil, -- The Root Folder Is Only If You Have A Hub With Multiple Game Scripts and u may remove it. DO NOT ADD A SLASH
		ConfigFolder = S8 -- The Name Of The Folder Where Luna Will Store Configs For This Script. DO NOT ADD A SLASH
	},

	KeySystem = false, -- As Of Beta 6, Luna Has officially Implemented A Key System!
	KeySettings = {
		Title = S9,
		Subtitle = S10,
		Note = S11,
		SaveInRoot = true, -- Enabling will save the key in your RootFolder (YOU MUST HAVE ONE BEFORE ENABLING THIS OPTION)
		SaveKey = true, -- The userS701t stop the script, just wait for respawn
    if JobAutoFarm_State.running then
        print(S46)
        local char, hum, root = waitForCharacter()
        
        if char and hum and root and JobAutoFarm_State.running then
            print(S47)
            -- The main loop will continue automatically
        end
    end
end

-- Function to tween to a position with fixed Y at 255
local function tweenToPosition(position)
    if not JobAutoFarm_State.running then return false end
    
    local char, hum, root = getCharacterReferences()
    if not root then
        print(S48)
        char, hum, root = waitForCharacter()
        if not root or not JobAutoFarm_State.running then return false end
    end
    
    -- Keep Y fixed at 255
    local fixedPosition = Vector3.new(position.X, 255, position.Z)
    local distance = (root.Position - fixedPosition).Magnitude
    
    JobAutoFarm_State.currentTween = game:GetService("TweenService"):Create(
        root, 
        TweenInfo.new(distance / 17, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
        {CFrame = CFrame.new(fixedPosition)}
    )
    JobAutoFarm_State.currentTween:Play()
    
    -- Create a connection to check if script is still running
    local completed = false
    local connection = JobAutoFarm_State.currentTween.Completed:Connect(function()
        completed = true
    end)
    
    -- Wait for tween to complete or script to stop
    local startTime = tick()
    local timeout = distance / 17 + 5 -- Add 5 seconds buffer
    
    while not completed and JobAutoFarm_State.running and (tick() - startTime) < timeout do
        wait(0.1)
    end
    
    connection:Disconnect()
    
    if not JobAutoFarm_State.running then
        if JobAutoFarm_State.currentTween then
            JobAutoFarm_State.currentTween:Cancel()
        end
        return false
    end
    
    JobAutoFarm_State.currentTween = nil
    return true
end

-- Function to follow path to a target position
local function followPathTo(targetPosition)
    if not JobAutoFarm_State.running then return false end
    
    local char, hum, root = getCharacterReferences()
    if not root then
        print(S49)
        char, hum, root = waitForCharacter()
        if not root or not JobAutoFarm_State.running then return false end
    end
    
    -- First set Y position to 255
    root.CFrame = CFrame.new(root.Position.X, 255.3, root.Position.Z)
    wait(0.1)
    
    if not JobAutoFarm_State.running then return false end
    
    -- Create and compute path
    local path = game:GetService(S50):CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true
    })
    
    local success, errorMessage = pcall(function()
        path:ComputeAsync(root.Position, targetPosition)
    end)
    
    if success and path.Status == Enum.PathStatus.Success and JobAutoFarm_State.running then
        for i, waypoint in ipairs(path:GetWaypoints()) do
            if not JobAutoFarm_State.running then return false end
            
            -- Move to each waypoint with fixed Y
            if not tweenToPosition(waypoint.Position) then return false end
            
            -- If weS702re at the exact target position with Y=255
    local char, hum, root = getCharacterReferences()
    if root then
        root.CFrame = CFrame.new(targetPosition.X, 255, targetPosition.Z)
    end
    return true
end

-- Function to trigger the job UI initially
local function applyForJob()
    if not JobAutoFarm_State.running then return false end
    
    local char, hum, root = getCharacterReferences()
    if not root then
        print(S54)
        char, hum, root = waitForCharacter()
        if not root or not JobAutoFarm_State.running then return false end
    end
    
    print(S55)
    local touchPart = workspace.Map.Tiles.GasStationTile.Quick11.Interior.Quick11Beacon.TouchPart
    firetouchinterest(root, touchPart, 0)
    wait(0.1)
    firetouchinterest(root, touchPart, 1)
    print(S56)
    
    -- Wait for you to manually click Apply
    print(S57)
    local waitStart = tick()
    while JobAutoFarm_State.running and (tick() - waitStart) < 8 do
        wait(0.1)
    end
    
    if not JobAutoFarm_State.running then return false end
    
    print(S58)
    return true
end

-- Function to pick up a box
local function pickUpBox()
    if not JobAutoFarm_State.running then return false end
    
    print(S59)
    
    -- Fire the proximity prompt
    fireproximityprompt(workspace.Map.Tiles.GasStationTile.Quick11.Interior.ShelfStockingJob.NormalBox.ProximityPrompt)
    print(S60)
    
    -- Wait a moment for the box to be picked up
    local waitStart = tick()
    while JobAutoFarm_State.running and (tick() - waitStart) < 2 do
        wait(0.1)
    end
    
    return JobAutoFarm_State.running
end

-- Function to move to beacon and wait for delivery
local function moveToBeaconAndDeliver()
    if not JobAutoFarm_State.running then return false end
    
    print(S61)
    
    -- Find the beacon base
    local success, beaconBase = pcall(function()
        return workspace.Beacon.Base
    end)
    
    if not JobAutoFarm_State.running then return false end
    
    if not success or not beaconBase then
        print(S62)
        return false
    end
    
    print(S63)
    
    -- Move to the beacon position
    if not followPathTo(beaconBase.Position) then return false end
    
    print(S64)
    
    if not JobAutoFarm_State.running then return false end
    
    -- Wait for delivery to complete - beacon should disappear
    local waitStart = tick()
    while JobAutoFarm_State.running and (tick() - waitStart) < 10 do
        -- Check if beacon still exists
        local beaconStillExists = pcall(function()
            return workspace.Beacon.Base ~= nil
        end)
        
        if not beaconStillExists then
            print(S65)
            return true
        end
        
        wait(0.5)
    end
    
    return JobAutoFarm_State.running
end

-- Main farming function
local function startAutoFarm()
    while JobAutoFarm_State.running do
        -- Wait for character if needed
        local char, hum, root = getCharacterReferences()
        if not char or not hum or not root then
            print(S66)
            char, hum, root = waitForCharacter()
            if not char or not hum or not root or not JobAutoFarm_State.running then
                break
            end
        end
        
        -- Set up death detection for current character
        table.insert(JobAutoFarm_State.connections, hum.Died:Connect(onCharacterDied))
        
        -- First apply for the job
        if not followPathTo(JobAutoFarm_State.location) then 
            if JobAutoFarm_State.running then
                print(S67)
                wait(2)
                continue
            else
                break
            end
        end
        
        if not applyForJob() then 
            if JobAutoFarm_State.running then
                print(S68)
                wait(2)
                continue
            else
                break
            end
        end
        
        -- Now start the box stocking loop
        local boxCount = 0
        
        while JobAutoFarm_State.running do
            -- Check if character still exists
            local currentChar, currentHum, currentRoot = getCharacterReferences()
            if not currentChar or not currentHum or not currentRoot then
                print(S69)
                break -- Break inner loop to restart with new character
            end
            
            print(S70 .. (boxCount + 1) .. S71)
            
            -- Go to job location to pick up a box
            print(S72)
            if not followPathTo(JobAutoFarm_State.location) then 
                if JobAutoFarm_State.running then
                    print(S73)
                    wait(2)
                    continue
                else
                    break
                end
            end
            
            -- Pick up a box
            if pickUpBox() then
                boxCount = boxCount + 1
                print(S74 .. boxCount .. S75)
                
                -- Move to beacon and deliver
                if moveToBeaconAndDeliver() then
                    print(S76 .. boxCount .. S77)
                else
                    if not JobAutoFarm_State.running then break end
                    print(S78 .. boxCount .. S79)
                end
                
                -- Short wait before getting the next box
                if not JobAutoFarm_State.running then break end
                wait(1)
            else
                if not JobAutoFarm_State.running then break end
                print(S80)
                wait(2)
            end
            
            if not JobAutoFarm_State.running then break end
            print(S81 .. boxCount .. S82)
        end
        
        -- If we get here and script is still running, character probably died
        if JobAutoFarm_State.running then
            print(S83)
            wait(1) -- Short wait before restarting
        end
    end
    
    print(S84)
    cleanup()
end

-- Create Toggle
local Toggle = JobAutoFarm:CreateToggle({
	Name = S85,
	Description = S86,
	CurrentValue = false,
    Callback = function(Value)
        JobAutoFarm_State.running = Value
        
        if JobAutoFarm_State.running then
            print(S87)
            -- Run the farm in a separate thread so it doesnS703t stop the script, just wait for respawn
    if JanitorFarm_State.running then
        print(S98)
        local char, hum, root = waitForJanitorCharacter()
        
        if char and hum and root and JanitorFarm_State.running then
            print(S99)
            -- The main loop will continue automatically
        end
    end
end

-- Function to find path and tween to location for janitor
local function moveToJanitorLocation(target)
    if not JanitorFarm_State.running then return false end
    
    local char, hum, root = getJanitorCharacterReferences()
    if not root then
        print(S100)
        char, hum, root = waitForJanitorCharacter()
        if not root or not JanitorFarm_State.running then return false end
    end
    
    -- Create path
    local path = game:GetService(S101):CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true
    })
    
    -- Get target position
    local targetPosition = typeof(target) == S102 and target or target.Position
    
    -- Compute the path
    local success, errorMessage = pcall(function()
        path:ComputeAsync(root.Position, targetPosition)
    end)
    
    if not success then
        print(S103, errorMessage)
        return false
    end
    
    -- Move through each waypoint using tweens
    for i, waypoint in ipairs(path:GetWaypoints()) do
        if not JanitorFarm_State.running then return false end
        
        -- Check character references again
        local currentChar, currentHum, currentRoot = getJanitorCharacterReferences()
        if not currentRoot then
            print(S104)
            currentChar, currentHum, currentRoot = waitForJanitorCharacter()
            if not currentRoot or not JanitorFarm_State.running then return false end
        end
        
        -- Keep y-position fixed at specified height
        JanitorFarm_State.currentTween = game:GetService("TweenService"):Create(
            currentRoot,
            TweenInfo.new(JanitorFarm_State.config.tweenSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
            {CFrame = CFrame.new(Vector3.new(waypoint.Position.X, JanitorFarm_State.config.fixedYPosition, waypoint.Position.Z))}
        )
        JanitorFarm_State.currentTween:Play()
        
        -- Wait for completion or script stop
        local completed = false
        local connection = JanitorFarm_State.currentTween.Completed:Connect(function()
            completed = true
        end)
        
        while not completed and JanitorFarm_State.running do
            wait(0.1)
        end
        
        connection:Disconnect()
        
        if not JanitorFarm_State.running then
            if JanitorFarm_State.currentTween then
                JanitorFarm_State.currentTween:Cancel()
            end
            return false
        end
    end
    
    if not JanitorFarm_State.running then return false end
    
    -- Get character references for final movement
    local char, hum, root = getJanitorCharacterReferences()
    if not root then
        print(S105)
        char, hum, root = waitForJanitorCharacter()
        if not root or not JanitorFarm_State.running then return false end
    end
    
    -- Final tween to exact position (but still keeping y fixed)
    JanitorFarm_State.currentTween = game:GetService("TweenService"):Create(
        root,
        TweenInfo.new(JanitorFarm_State.config.tweenSpeed, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(Vector3.new(targetPosition.X, JanitorFarm_State.config.fixedYPosition, targetPosition.Z))}
    )
    JanitorFarm_State.currentTween:Play()
    
    local completed = false
    local connection = JanitorFarm_State.currentTween.Completed:Connect(function()
        completed = true
    end)
    
    while not completed and JanitorFarm_State.running do
        wait(0.1)
    end
    
    connection:Disconnect()
    
    if not JanitorFarm_State.running then
        if JanitorFarm_State.currentTween then
            JanitorFarm_State.currentTween:Cancel()
        end
        return false
    end
    
    JanitorFarm_State.currentTween = nil
    print(S106)
    return true
end

-- Function to fire touch transmitters for janitor
local function fireJanitorTouch()
    if not JanitorFarm_State.running then return false end
    
    local char, hum, root = getJanitorCharacterReferences()
    if not root then
        print(S107)
        char, hum, root = waitForJanitorCharacter()
        if not root or not JanitorFarm_State.running then return false end
    end
    
    local touchInterest = JanitorFarm_State.targetPart:FindFirstChild(S108)
    if touchInterest then
        firetouchinterest(root, JanitorFarm_State.targetPart, 0) -- Begin touch
        wait(0.1)
        firetouchinterest(root, JanitorFarm_State.targetPart, 1) -- End touch
        print(S109)
        return true
    else
        print(S110)
        return false
    end
end

-- Function to click the green Apply button for janitor
local function clickJanitorApplyButton()
    if not JanitorFarm_State.running then return false end
    
    print(S111)
    wait(1) -- Wait for dialog to appear
    
    if not JanitorFarm_State.running then return false end
    
    -- Find all TextLabels with S112 text
    for _, gui in pairs(player.PlayerGui:GetChildren()) do
        if gui:IsA(S113) then
            -- Search for the text S114
            for _, desc in pairs(gui:GetDescendants()) do
                if desc:IsA(S115) and string.find(desc.Text, S116) then
                    print(S117 .. desc.Text)
                    
                    -- Look for the green Apply button (should be a TextButton with S118 text)
                    for _, buttonDesc in pairs(desc.Parent:GetDescendants()) do
                        if buttonDesc:IsA(S119) and buttonDesc.Text == S120 then
                            print(S121)
                            
                            -- Try multiple methods to click the button
                            local clicked = false
                            
                            -- Method 1: Fire MouseButton1Click directly
                            pcall(function()
                                buttonDesc.MouseButton1Click:Fire()
                                clicked = true
                                print(S122)
                            end)
                            
                            wait(0.2)
                            
                            -- Method 2: Using getconnections
                            if not clicked then
                                pcall(function()
                                    for _, connection in pairs(getconnections(buttonDesc.MouseButton1Click)) do
                                        connection:Fire()
                                        clicked = true
                                        print(S123)
                                        break
                                    end
                                end)
                            end
                            
                            if clicked then
                                print(S124)
                                return true
                            end
                        end
                    end
                    break
                end
            end
        end
    end
    
    print(S125)
    return false
end

-- Function to maintain Y position for janitor
local function maintainJanitorYPosition()
    JanitorFarm_State.yPositionMaintenance = true
    
    -- Create a loop that constantly sets the Y position
    spawn(function()
        while JanitorFarm_State.yPositionMaintenance and JanitorFarm_State.running do
            local char, hum, root = getJanitorCharacterReferences()
            if root then
                local currentPos = root.Position
                if currentPos.Y ~= JanitorFarm_State.config.fixedYPosition then
                    root.CFrame = CFrame.new(currentPos.X, JanitorFarm_State.config.fixedYPosition, currentPos.Z)
                end
            end
            wait(0.1)
        end
    end)
end

-- Function to get all puddle locations and sort them by distance
local function getPuddlesInOrder()
    if not JanitorFarm_State.running then return {} end
    
    local char, hum, root = getJanitorCharacterReferences()
    if not root then return {} end
    
    -- Find all puddles in the container
    local puddlesContainer = workspace.Map.Tiles.BurgerPlaceTile.BurgerPlace.Interior.Puddles
    
    print(S126)
    
    -- Create a table to hold small puddles
    local puddles = {}
    
    -- Add the specifically named SmallPuddle if it exists
    local smallPuddle = puddlesContainer:FindFirstChild(S127)
    if smallPuddle then
        table.insert(puddles, smallPuddle)
        print(S128)
    end
    
    -- Look through all puddles and find any with S129 in the name
    for _, puddle in pairs(puddlesContainer:GetChildren()) do
        -- Check if the puddle has S130 in its name and isnS704t block
            spawn(function()
                startJanitorFarm()
            end)
        else
            print(S177)
            janitorCleanup()
        end
    end
}, S178)
-------------------------
--autocook
-------------------------
-- Optimized Steakhouse Auto Farm Script
-- Consolidated state management for maximum efficiency

-- Consolidated state management for steakhouse
local SteakhouseFarm_State = {
    enabled = false,
    autoMovement = false,
    steaksCookedCounter = 0,
    isRunning = false,
    connections = {},
    config = {
        tweenSpeed = 28,
        waitBetweenActions = 0.0,
        steakhouseBeacon = workspace.Map.Tiles.ShoppingTile.SteakHouse.Interior.SteakHouseBeacon.TouchPart,
        fridgeArea = workspace.Map.Tiles.ShoppingTile.SteakHouse.Interior.Fridge.Area,
        fridge = workspace.Map.Tiles.ShoppingTile.SteakHouse.Interior.Fridge
    }
}

-- Initialize player references and Net module
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild(S179)
local hrp = character:WaitForChild(S180)

-- Net module detection (exact from working script)
local Net = nil
if _G.NetBypass and _G.NetBypass.Net then
    Net = _G.NetBypass.Net
elseif _G.Net then
    Net = _G.Net
else
    local success, netModule = pcall(function()
        return require(game.ReplicatedStorage.Modules.Core.Net)
    end)
    if success and netModule then
        Net = netModule
    end
end

-- Precise timing function (exact from working script)
local function isPerfectMoment(barAmount, cookedPerfectly)
    local currentPosition = barAmount.Size.X.Scale
    local perfectStart = cookedPerfectly.Position.X.Scale
    local perfectEnd = perfectStart + cookedPerfectly.Size.X.Scale
    
    return currentPosition >= (perfectStart + 0.01) and 
           currentPosition <= (perfectEnd - 0.01)
end

-- Enhanced Auto Cook Function with Stealth Net Bypass (exact from working script)
local function autoCookSteak()
    -- Find current grill
    local currentGrill = nil
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA(S181) and obj:FindFirstChild(S182) then
            currentGrill = obj
            break
        end
    end
    
    -- Find progress bar frame
    local progressBarFrame = nil
    for _, gui in pairs(player.PlayerGui:GetChildren()) do
        if gui:IsA(S183) then
            local found = gui:FindFirstChild(S184)
            if found and found.Visible then
                progressBarFrame = found
                break
            end
        end
    end
    
    if not progressBarFrame or not currentGrill then 
        return false 
    end
    
    local mainFrame = progressBarFrame:FindFirstChild(S185)
    local inputFrame = progressBarFrame:FindFirstChild(S186)
    
    if not mainFrame or not inputFrame then 
        return false 
    end
    
    local barAmount = mainFrame:FindFirstChild(S187)
    local cookedPerfectly = mainFrame:FindFirstChild(S188)
    
    if not barAmount or not cookedPerfectly then 
        return false 
    end
    
    -- Check if in perfect moment
    if isPerfectMoment(barAmount, cookedPerfectly) then
        -- STEALTH METHOD: Use Net bypass with proper filtering check
        if Net and _G.NetBypass then
            local stealthEvents = {S189, S190, S191}
            
            for _, eventName in pairs(stealthEvents) do
                if _G.NetBypass.allowEvent then
                    _G.NetBypass.allowEvent(eventName)
                end
            end
            
            pcall(function()
                wait(math.random(50, 150) / 1000)
                Net.send(S192, {
                    perfect = true,
                    grill = currentGrill,
                    timestamp = tick()
                })
                
                wait(math.random(30, 80) / 1000)
                Net.send(S193, S194, {
                    result = S195,
                    completion_time = tick()
                })
            end)
        end
        
        -- Complete the visual/client-side
        wait(math.random(100, 200) / 1000)
        
        local completionMethods = {
            function()
                local cookModule = require(game.ReplicatedStorage.Modules.Game.Cooking)
                if cookModule and cookModule.force_complete then
                    pcall(function()
                        cookModule.force_complete(currentGrill)
                    end)
                end
            end,
            function()
                local finishBar = inputFrame:FindFirstChild(S196)
                if finishBar then
                    for _, connection in pairs(getconnections(finishBar.MouseButton1Click)) do
                        pcall(function() 
                            connection:Fire() 
                        end)
                    end
                end
            end
        }
        
        for i, method in ipairs(completionMethods) do
            pcall(method)
        end
        
        SteakhouseFarm_State.steaksCookedCounter = SteakhouseFarm_State.steaksCookedCounter + 1
        wait(math.random(500, 1000) / 1000)
        return true
    end
    
    return false
end

-- Helper function to wait for character respawn
local function waitForRespawn()
    if not character or not character:FindFirstChild(S197) then
        character = player.CharacterAdded:Wait()
        humanoid = character:WaitForChild(S198)
        hrp = character:WaitForChild(S199)
    end
end

-- Movement function
local function moveToPosition(targetPosition)
    waitForRespawn()
    
    local path = game:GetService(S200):CreatePath({
        AgentCanJump = true,
        AgentHeight = 5,
        AgentRadius = 2,
        WaypointSpacing = 4
    })
    
    local success, errorMessage = pcall(function()
        local fixedYPosition = Vector3.new(targetPosition.X, 255, targetPosition.Z)
        path:ComputeAsync(hrp.Position, fixedYPosition)
    end)
    
    if success and path.Status == Enum.PathStatus.Success then
        local waypoints = path:GetWaypoints()
        
        for i, waypoint in ipairs(waypoints) do
            if not SteakhouseFarm_State.autoMovement then return false end
            
            waitForRespawn()
            
            local waypointPosition = Vector3.new(waypoint.Position.X, 255, waypoint.Position.Z)
            
            local tweenInfo = TweenInfo.new(
                (Vector3.new(hrp.Position.X, 0, hrp.Position.Z) - 
                Vector3.new(waypointPosition.X, 0, waypointPosition.Z)).Magnitude / SteakhouseFarm_State.config.tweenSpeed,
                Enum.EasingStyle.Linear
            )
            
            local tween = game:GetService("TweenService"):Create(hrp, tweenInfo, {
                CFrame = CFrame.new(waypointPosition)
            })
            
            tween:Play()
            
            local connection
            connection = game:GetService("RunService").Heartbeat:Connect(function()
                if not SteakhouseFarm_State.autoMovement then
                    tween:Cancel()
                    connection:Disconnect()
                end
            end)
            
            tween.Completed:Wait()
            connection:Disconnect()
            
            if not SteakhouseFarm_State.autoMovement then return false end
            wait(0.1)
        end
        return true
    else
        warn(S201, errorMessage)
        local fixedPosition = Vector3.new(targetPosition.X, 255, targetPosition.Z)
        humanoid:MoveTo(fixedPosition)
        
        local reachedDestination = false
        local startTime = tick()
        while not reachedDestination and SteakhouseFarm_State.autoMovement and (tick() - startTime) < 10 do
            if (hrp.Position - fixedPosition).Magnitude < 5 then
                reachedDestination = true
            end
            wait(0.1)
        end
        
        return reachedDestination and SteakhouseFarm_State.autoMovement
    end
end

-- Fridge interaction function
local function interactWithFridge()
    waitForRespawn()
    
    local fridgeAreaPosition = SteakhouseFarm_State.config.fridgeArea.Position
    local targetPosition = Vector3.new(fridgeAreaPosition.X, 255, fridgeAreaPosition.Z)
    local moveSuccess = moveToPosition(targetPosition)
    
    if not moveSuccess or not SteakhouseFarm_State.autoMovement then return false end
    
    wait(1)
    if not SteakhouseFarm_State.autoMovement then return false end
    
    hrp.CFrame = CFrame.new(hrp.Position, 
        Vector3.new(fridgeAreaPosition.X, hrp.Position.Y, fridgeAreaPosition.Z))
    
    wait(1.5)
    if not SteakhouseFarm_State.autoMovement then return false end
    
    local maxAttempts = 5
    for attempt = 1, maxAttempts do
        if not SteakhouseFarm_State.autoMovement then return false end
        
        local proximityPrompt = nil
        
        for i, child in pairs(SteakhouseFarm_State.config.fridge:GetChildren()) do
            if i == 4 and child:FindFirstChild(S202) then
                proximityPrompt = child.Attachment:FindFirstChild(S203)
                if proximityPrompt then break end
            end
        end
        
        if not proximityPrompt then
            for _, child in pairs(SteakhouseFarm_State.config.fridge:GetDescendants()) do
                if child:IsA(S204) then
                    proximityPrompt = child
                    break
                end
            end
        end
        
        if proximityPrompt then
            local promptParent = proximityPrompt.Parent
            if promptParent and promptParent:IsA(S205) then
                hrp.CFrame = CFrame.new(promptParent.Position + Vector3.new(0, 2, 0))
            elseif promptParent and promptParent:IsA(S206) and promptParent.Parent:IsA(S207) then
                hrp.CFrame = CFrame.new(promptParent.Parent.Position + Vector3.new(0, 2, 0))
            end
            
            if not SteakhouseFarm_State.autoMovement then return false end
            
            fireproximityprompt(proximityPrompt)
            
            local waitTime = 3
            local startTime = tick()
            while SteakhouseFarm_State.autoMovement and (tick() - startTime) < waitTime do
                wait(0.1)
            end
            
            if not SteakhouseFarm_State.autoMovement then return false end
            
            return true
        end
        
        if attempt < maxAttempts and SteakhouseFarm_State.autoMovement then
            local offsetPosition = targetPosition + Vector3.new(math.random(-1, 1), 0, math.random(-1, 1))
            hrp.CFrame = CFrame.new(offsetPosition)
            if not SteakhouseFarm_State.autoMovement then return false end
            wait(1)
        end
    end
    
    return false
end

-- Beacon finding and movement function
local function findAndMoveToBeacon()
    waitForRespawn()
    
    local startTime = tick()
    local timeout = 10
    local beaconFound = false
    local targetBeacon = nil
    
    while not beaconFound and SteakhouseFarm_State.autoMovement and (tick() - startTime) < timeout do
        if workspace:FindFirstChild(S208) and workspace.Beacon:FindFirstChild(S209) then
            targetBeacon = workspace.Beacon.Base
            beaconFound = true
            break
        end
        wait(0.5)
    end
    
    if not beaconFound or not targetBeacon then
        return false
    end
    
    if not SteakhouseFarm_State.autoMovement then return false end
    
    local beaconPosition = targetBeacon.Position
    
    local moveSuccess = moveToPosition(beaconPosition)
    
    if not moveSuccess or not SteakhouseFarm_State.autoMovement then return false end
    
    return true
end

-- Main auto farm cleanup function
local function steakhouseCleanup()
    SteakhouseFarm_State.enabled = false
    SteakhouseFarm_State.autoMovement = false
    
    for _, connection in pairs(SteakhouseFarm_State.connections) do
        if connection then
            connection:Disconnect()
        end
    end
    SteakhouseFarm_State.connections = {}
end

-- LUNA TOGGLE SYSTEM INTEGRATION
local SteakhouseFarmToggle = JobAutoFarm:CreateToggle({
    Name = S210,
    Description = S211,
    CurrentValue = false,
    Callback = function(Value)
        SteakhouseFarm_State.enabled = Value
        SteakhouseFarm_State.autoMovement = Value
        
        if not Value then
            steakhouseCleanup()
        end
    end
}, S212)

-- Auto Movement Loop
if not SteakhouseFarm_State.isRunning then
    SteakhouseFarm_State.isRunning = true
    
    -- Movement loop
    task.spawn(function()
        while SteakhouseFarm_State.isRunning do
            if SteakhouseFarm_State.autoMovement then
                pcall(function()
                    local fridgeSuccess = interactWithFridge()
                    
                    if not fridgeSuccess or not SteakhouseFarm_State.autoMovement then
                        wait(3)
                        return
                    end
                    
                    if not SteakhouseFarm_State.autoMovement then return end
                    wait(SteakhouseFarm_State.config.waitBetweenActions)
                    
                    local beaconSuccess = findAndMoveToBeacon()
                    
                    if not beaconSuccess or not SteakhouseFarm_State.autoMovement then
                        wait(3)
                        return
                    end
                    
                    if not SteakhouseFarm_State.autoMovement then return end
                    
                    local cookingStart = tick()
                    local cookingTimeout = 20
                    local cookingCompleted = false
                    
                    while SteakhouseFarm_State.autoMovement and (tick() - cookingStart) < cookingTimeout do
                        local progressBarFrame = nil
                        for _, gui in pairs(player.PlayerGui:GetChildren()) do
                            if gui:IsA(S213) then
                                local found = gui:FindFirstChild(S214)
                                if found and found.Visible then
                                    progressBarFrame = found
                                    break
                                end
                            end
                        end
                        
                        if progressBarFrame then
                            while progressBarFrame and progressBarFrame.Visible and SteakhouseFarm_State.autoMovement do
                                wait(0.1)
                            end
                            cookingCompleted = true
                            break
                        end
                        
                        wait(0.5)
                    end
                    
                    if cookingCompleted then
                        wait(2)
                    else
                        wait(5)
                    end
                end)
            end
            
            wait(1)
        end
    end)
    
    -- Auto-cook loop (exact from working script)
    task.spawn(function()
        while SteakhouseFarm_State.isRunning do
            task.wait(0.01)
            
            if SteakhouseFarm_State.enabled then
                local success, result = pcall(autoCookSteak)
                if not success then
                    warn(S215 .. tostring(result))
                end
            end
        end
    end)
end

--------------------------------------------------------------------------------------------
JobAutoFarm:CreateDivider()
---------------------------------------------------------------------------------------------
-- ATM HACK SCRIPT (Optimized)
---------------------------------------------------------------------------------------------

-- Consolidated state management for ATM hack
local ATMHack_State = {
    running = false,
    loop = nil,
    SliderMinigame = require(game:GetService(S216).Modules.Game.Minigames.SliderMinigame)
}

-- Override the needle position calculation
local function modifiedNeedlePositionCalculation()
    -- Increase speed multiplier (from 0.65 to 2)
    local v23 = tick() * 2 % 3;
    
    -- Expand range from [0, 1] to [-0.5, 1.5]
    if v23 > 1.5 then
        v23 = 3 - v23;
    elseif v23 < -0.5 then
        v23 = -v23 - 0.5;
    end
    
    ATMHack_State.SliderMinigame.needle_pos.set(v23)
end

-- Function to check if needle is in target zone
local function isNeedleInTargetZone()
    local needlePos = ATMHack_State.SliderMinigame.needle_pos.get()
    local targetPos = ATMHack_State.SliderMinigame.target_pos.get()
    local targetSize = ATMHack_State.SliderMinigame.target_size.get()
    
    -- Expand target zone slightly for more success
    local lowerBound = targetPos - (targetSize / 2) - 0.1
    local upperBound = targetPos + (targetSize / 2) + 0.1
    
    -- Check if needle is within the expanded target zone
    return needlePos >= lowerBound and needlePos <= upperBound
end

-- Function to simulate a click when in target zone
local function autoClickIfInTargetZone()
    if isNeedleInTargetZone() then
        -- Simulate clicking
        local currentLevel = ATMHack_State.SliderMinigame.level.get()
        ATMHack_State.SliderMinigame.level.set(currentLevel + 1)
        
        -- Minimal audio feedback
        require(game:GetService(S217).Modules.Game.Minigames.SliderMinigame.play_audio)(
            S218, 
            0.1, 
            (math.min(2, 1.25 + 0.25 * currentLevel))
        )
    end
end

-- Main auto-win loop
local function autoWinATMHack()
    -- Ensure the minigame is enabled
    if not ATMHack_State.SliderMinigame.enabled.get() then return end
    
    -- Modify needle position calculation
    modifiedNeedlePositionCalculation()
    
    -- Try to click in target zone multiple times
    for _ = 1, 3 do
        autoClickIfInTargetZone()
    end
    
    -- Check if weS705t block
            spawn(function()
                startATMHack()
            end)
        else
            print(S225)
            atmHackCleanup()
        end
    end
}, S226)

---------------------------------------------------------------------------------------------
-- ESP SYSTEM SCRIPT (Optimized)
---------------------------------------------------------------------------------------------

-- Consolidated state management for ESP system
local ESP_State = {
    objects2D = {},
    objects3D = {},
    currentMode = S227,
    enabled = false,
    config2D = {
        BoxThickness = 2,
        BoxTransparency = 1,
        HealthColorGradient = {
            {Threshold = 25, Color = Color3.fromRGB(255, 0, 0)},     -- Red at low health
            {Threshold = 50, Color = Color3.fromRGB(255, 165, 0)},   -- Orange at medium-low health
            {Threshold = 75, Color = Color3.fromRGB(255, 255, 0)},   -- Yellow at medium health
            {Threshold = 100, Color = Color3.fromRGB(0, 255, 0)}     -- Green at full health
        },
        MaxDisplayDistance = 1000,
        BoxSizeX = 2,
        BoxSizeY = 3,
        RefreshRate = 5,
    },
    config3D = {
        Box_Color = Color3.fromRGB(255, 0, 0),
        Box_Thickness = 2,
        Box_Transparency = 1,
        Autothickness = true
    }
}

-- Functions for health color (2D ESP)
local function GetHealthColor2D(health)
    for _, colorInfo in ipairs(ESP_State.config2D.HealthColorGradient) do
        if health <= colorInfo.Threshold then
            return colorInfo.Color
        end
    end
    return Color3.fromRGB(0, 255, 0)
end

-- Functions for health color (3D ESP)
local function GetHealthColor3D(currentHealth, maxHealth)
    return Color3.fromRGB(227, 52, 52):Lerp(Color3.fromRGB(88, 217, 24), currentHealth / maxHealth)
end

-- Create 2D ESP objects for a player
local function CreateESP2DForPlayer(espPlayer)
    if espPlayer == player then return end
    if ESP_State.objects2D[espPlayer] then return ESP_State.objects2D[espPlayer] end
    
    ESP_State.objects2D[espPlayer] = {
        Top = Drawing.new(S228),
        Bottom = Drawing.new(S229),
        Left = Drawing.new(S230),
        Right = Drawing.new(S231),
        LastUpdate = tick()
    }
    
    for _, line in pairs(ESP_State.objects2D[espPlayer]) do
        if type(line) ~= S232 then
            line.Visible = false
            line.Thickness = ESP_State.config2D.BoxThickness
            line.Transparency = ESP_State.config2D.BoxTransparency
            line.Color = ESP_State.config2D.HealthColorGradient[1].Color
            line.From = Vector2.new(0, 0)
            line.To = Vector2.new(0, 0)
        end
    end
    
    return ESP_State.objects2D[espPlayer]
end

-- Create 3D ESP objects for a player
local function CreateESP3DForPlayer(espPlayer)
    if espPlayer == player then return end
    if ESP_State.objects3D[espPlayer] then return ESP_State.objects3D[espPlayer] end
    
    ESP_State.objects3D[espPlayer] = {
        lines = {},
        connection = nil
    }
    
    for i = 1, 12 do
        ESP_State.objects3D[espPlayer].lines[i] = Drawing.new(S233)
        ESP_State.objects3D[espPlayer].lines[i].Visible = false
        ESP_State.objects3D[espPlayer].lines[i].Color = ESP_State.config3D.Box_Color
        ESP_State.objects3D[espPlayer].lines[i].Thickness = ESP_State.config3D.Box_Thickness
        ESP_State.objects3D[espPlayer].lines[i].Transparency = ESP_State.config3D.Box_Transparency
    end
    
    return ESP_State.objects3D[espPlayer]
end

-- Remove ESP objects for a player
local function RemoveESPForPlayer(espPlayer)
    -- Remove 2D ESP
    if ESP_State.objects2D[espPlayer] then
        for _, line in pairs(ESP_State.objects2D[espPlayer]) do
            if type(line) ~= S234 then
                line:Remove()
            end
        end
        ESP_State.objects2D[espPlayer] = nil
    end
    
    -- Remove 3D ESP
    if ESP_State.objects3D[espPlayer] then
        if ESP_State.objects3D[espPlayer].connection then
            ESP_State.objects3D[espPlayer].connection:Disconnect()
        end
        for _, line in pairs(ESP_State.objects3D[espPlayer].lines) do
            line:Remove()
        end
        ESP_State.objects3D[espPlayer] = nil
    end
end

-- Update 2D ESP for all players
local function Update2DESP()
    for _, espPlayer in ipairs(game.Players:GetPlayers()) do
        if espPlayer ~= player then
            local espObj = CreateESP2DForPlayer(espPlayer)
            
            if ESP_State.enabled and ESP_State.currentMode == S235 and espPlayer.Character and 
               espPlayer.Character:FindFirstChild(S236) and 
               espPlayer.Character:FindFirstChild(S237) then
                
                if tick() - espObj.LastUpdate > ESP_State.config2D.RefreshRate then
                    RemoveESPForPlayer(espPlayer)
                    espObj = CreateESP2DForPlayer(espPlayer)
                    espObj.LastUpdate = tick()
                end
                
                local hrp = espPlayer.Character.HumanoidRootPart
                local humanoid = espPlayer.Character.Humanoid
                local head = espPlayer.Character:FindFirstChild(S238)
                
                local distance = (workspace.CurrentCamera.CFrame.Position - hrp.Position).Magnitude
                if distance > ESP_State.config2D.MaxDisplayDistance then
                    for _, line in pairs(espObj) do
                        if type(line) ~= S239 then
                            line.Visible = false
                        end
                    end
                else
                    local pos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(hrp.Position)
                    
                    if onScreen then
                        local scaleFactor = math.clamp(1 - (distance / ESP_State.config2D.MaxDisplayDistance), 0.3, 1)
                        local scale = (head and head.Size.Y/2 or 0.5)
                        local size = Vector3.new(ESP_State.config2D.BoxSizeX, ESP_State.config2D.BoxSizeY, 0) * (scale * 2 * scaleFactor)
                        
                        local TL = workspace.CurrentCamera:WorldToViewportPoint((hrp.CFrame * CFrame.new(size.X, size.Y, 0)).Position)
                        local TR = workspace.CurrentCamera:WorldToViewportPoint((hrp.CFrame * CFrame.new(-size.X, size.Y, 0)).Position)
                        local BL = workspace.CurrentCamera:WorldToViewportPoint((hrp.CFrame * CFrame.new(size.X, -size.Y, 0)).Position)
                        local BR = workspace.CurrentCamera:WorldToViewportPoint((hrp.CFrame * CFrame.new(-size.X, -size.Y, 0)).Position)
                        
                        espObj.Top.From = Vector2.new(TL.X, TL.Y)
                        espObj.Top.To = Vector2.new(TR.X, TR.Y)
                        espObj.Left.From = Vector2.new(TL.X, TL.Y)
                        espObj.Left.To = Vector2.new(BL.X, BL.Y)
                        espObj.Right.From = Vector2.new(TR.X, TR.Y)
                        espObj.Right.To = Vector2.new(BR.X, BR.Y)
                        espObj.Bottom.From = Vector2.new(BL.X, BL.Y)
                        espObj.Bottom.To = Vector2.new(BR.X, BR.Y)
                        
                        local healthPercentage = (humanoid.Health / humanoid.MaxHealth) * 100
                        
                        for _, line in pairs(espObj) do
                            if type(line) ~= S240 then
                                line.Color = GetHealthColor2D(healthPercentage)
                                line.Transparency = ESP_State.config2D.BoxTransparency * scaleFactor
                                line.Visible = true
                            end
                        end
                    else
                        for _, line in pairs(espObj) do
                            if type(line) ~= S241 then
                                line.Visible = false
                            end
                        end
                    end
                end
            else
                for _, line in pairs(espObj) do
                    if type(line) ~= S242 then
                        line.Visible = false
                    end
                end
            end
        end
    end
end

-- Create 3D ESP for a specific player
local function Create3DESPForPlayer(espPlayer)
    if espPlayer == player then return end
    
    local esp3DObj = CreateESP3DForPlayer(espPlayer)
    
    local function Update3DESP()
        if ESP_State.enabled and ESP_State.currentMode == S243 and espPlayer.Character and 
           espPlayer.Character:FindFirstChild(S244) and 
           espPlayer.Character:FindFirstChild(S245) and 
           espPlayer.Character.Humanoid.Health > 0 then
            
            local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(espPlayer.Character.HumanoidRootPart.Position)
            if vis then
                local Scale = espPlayer.Character.Head.Size.Y/2
                local Size = Vector3.new(2, 3, 1.5) * (Scale * 2)

                local Top1 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                local Top2 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                local Top3 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                local Top4 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                local Bottom1 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                local Bottom2 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                local Bottom3 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                local Bottom4 = workspace.CurrentCamera:WorldToViewportPoint((espPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                local lines = esp3DObj.lines
                
                -- Top face
                lines[1].From = Vector2.new(Top1.X, Top1.Y); lines[1].To = Vector2.new(Top2.X, Top2.Y)
                lines[2].From = Vector2.new(Top2.X, Top2.Y); lines[2].To = Vector2.new(Top3.X, Top3.Y)
                lines[3].From = Vector2.new(Top3.X, Top3.Y); lines[3].To = Vector2.new(Top4.X, Top4.Y)
                lines[4].From = Vector2.new(Top4.X, Top4.Y); lines[4].To = Vector2.new(Top1.X, Top1.Y)
                
                -- Bottom face
                lines[5].From = Vector2.new(Bottom1.X, Bottom1.Y); lines[5].To = Vector2.new(Bottom2.X, Bottom2.Y)
                lines[6].From = Vector2.new(Bottom2.X, Bottom2.Y); lines[6].To = Vector2.new(Bottom3.X, Bottom3.Y)
                lines[7].From = Vector2.new(Bottom3.X, Bottom3.Y); lines[7].To = Vector2.new(Bottom4.X, Bottom4.Y)
                lines[8].From = Vector2.new(Bottom4.X, Bottom4.Y); lines[8].To = Vector2.new(Bottom1.X, Bottom1.Y)
                
                -- Vertical lines
                lines[9].From = Vector2.new(Top1.X, Top1.Y); lines[9].To = Vector2.new(Bottom1.X, Bottom1.Y)
                lines[10].From = Vector2.new(Top2.X, Top2.Y); lines[10].To = Vector2.new(Bottom2.X, Bottom2.Y)
                lines[11].From = Vector2.new(Top3.X, Top3.Y); lines[11].To = Vector2.new(Bottom3.X, Bottom3.Y)
                lines[12].From = Vector2.new(Top4.X, Top4.Y); lines[12].To = Vector2.new(Bottom4.X, Bottom4.Y)

                -- Health-based color and thickness
                local healthColor = GetHealthColor3D(espPlayer.Character.Humanoid.Health, espPlayer.Character.Humanoid.MaxHealth)
                local thickness = ESP_State.config3D.Box_Thickness
                if ESP_State.config3D.Autothickness then
                    thickness = math.clamp(1/(player.Character.HumanoidRootPart.Position - espPlayer.Character.HumanoidRootPart.Position).magnitude*100, 0.1, 4)
                end
                
                for _, line in pairs(lines) do
                    line.Color = healthColor
                    line.Thickness = thickness
                    line.Visible = true
                end
            else
                for _, line in pairs(esp3DObj.lines) do
                    line.Visible = false
                end
            end
        else
            for _, line in pairs(esp3DObj.lines) do
                line.Visible = false
            end
            if not game.Players:FindFirstChild(espPlayer.Name) then
                if esp3DObj.connection then
                    esp3DObj.connection:Disconnect()
                end
            end
        end
    end
    
    esp3DObj.connection = runService.RenderStepped:Connect(Update3DESP)
end

-- Initialize 3D ESP for all players
local function Initialize3DESP()
    for _, espPlayer in ipairs(game.Players:GetPlayers()) do
        if espPlayer ~= player then
            Create3DESPForPlayer(espPlayer)
        end
    end
end

-- Clean up all ESP
local function CleanupAllESP()
    for espPlayer, _ in pairs(ESP_State.objects2D) do
        RemoveESPForPlayer(espPlayer)
    end
    for espPlayer, _ in pairs(ESP_State.objects3D) do
        RemoveESPForPlayer(espPlayer)
    end
end

-- Update ESP based on current mode
local function UpdateESPSystem()
    if not ESP_State.enabled then
        CleanupAllESP()
        return
    end
    
    if ESP_State.currentMode == S246 then
        -- Clean up 3D ESP
        for espPlayer, esp3DObj in pairs(ESP_State.objects3D) do
            if esp3DObj.connection then
                esp3DObj.connection:Disconnect()
            end
            for _, line in pairs(esp3DObj.lines) do
                line.Visible = false
            end
        end
    elseif ESP_State.currentMode == S247 then
        -- Clean up 2D ESP
        for espPlayer, espObj in pairs(ESP_State.objects2D) do
            for _, line in pairs(espObj) do
                if type(line) ~= S248 then
                    line.Visible = false
                end
            end
        end
        Initialize3DESP()
    end
end

-- Create ESP Type Dropdown
local ESPDropdown = Visuals:CreateDropdown({
	Name = S249,
    Description = nil,
	Options = {S250, S251},
    CurrentOption = {S252},
    MultipleOptions = false,
    SpecialType = nil,
    Callback = function(Option)
        ESP_State.currentMode = Option
        UpdateESPSystem()
    end
}, S253)

-- Create ESP Toggle
local ESPToggle = Visuals:CreateToggle({
	Name = S254,
	Description = nil,
	CurrentValue = false,
    Callback = function(Value)
        ESP_State.enabled = Value
        UpdateESPSystem()
    end
}, S255)

-- Main render loop for 2D ESP
runService.RenderStepped:Connect(function()
    if ESP_State.enabled and ESP_State.currentMode == S256 then
        Update2DESP()
    end
end)

-- Handle new players joining
game.Players.PlayerAdded:Connect(function(newPlayer)
    if ESP_State.currentMode == S257 and ESP_State.enabled then
        Create3DESPForPlayer(newPlayer)
    end
end)

-- Handle players leaving
game.Players.PlayerRemoving:Connect(function(espPlayer)
    RemoveESPForPlayer(espPlayer)
end)
---------------------------------------------------------------------------------------------
-- NAME TAGS SYSTEM SCRIPT (Optimized)
---------------------------------------------------------------------------------------------

-- Consolidated state management for name tags
local NameTags_State = {
    enabled = false,
    connection = nil
}

local function createNameTag(namePlayer)
    if namePlayer == player then return end
    
    local character = namePlayer.Character
    if not character then return end
    
    local head = character:FindFirstChild(S258)
    if not head then return end
    
    local existingTag = head:FindFirstChild(S259)
    if existingTag then return end -- DonS706t block
            spawn(function()
                startNameTags()
            end)
        else
            nameTagsCleanup()
        end
    end
}, S266)
---------------------------------------------------------------------------------------------
-- WEAPON ESP (Optimized)
---------------------------------------------------------------------------------------------

-- Move weapon data to global scope to avoid local variable limits
getgenv().WeaponESPData = getgenv().WeaponESPData or {}

-- Weapon signatures for identification
getgenv().WeaponESPData.signatures = {
    -- Firearms
    AK47 = {accuracy = 0.85, automatic = true, fire_rate = 600, MagSize = 30, range = 300, Recoil = 0.4, reload_time = 2.2, damage = 27, Durability = 720, KnockbackForce = 100, RagdollChance = 0.1, RarityName = S267, RarityPrice = 70000},
    Anaconda = {accuracy = 0.95, automatic = false, fire_rate = 80, MagSize = 6, range = 120, Recoil = 0.8, reload_time = 2, damage = 70, Durability = 120, KnockbackForce = 350, RagdollChance = 0.3, RarityName = S268, RarityPrice = 420000},
    C9 = {accuracy = 0.7, automatic = false, fire_rate = 300, MagSize = 8, range = 80, Recoil = 0.2, reload_time = 2, damage = 11, Durability = 120, RagdollChance = 0, RarityName = S269, RarityPrice = 700},
    Crossbow = {accuracy = 0.95, automatic = false, fire_rate = 100, MagSize = 1, range = 500, Recoil = 0.3, reload_time = 2, damage = 90, Durability = 120, KnockbackForce = 100, RagdollChance = 0.3, RarityName = S270, RarityPrice = 60000},
    [S271] = {accuracy = 0.5, automatic = false, fire_rate = 100, MagSize = 2, range = 50, Recoil = 2, reload_time = 3, damage = 16, Durability = 84, KnockbackForce = 300, RagdollChance = 0.4, RarityName = S272, RarityPrice = 8000},
    Draco = {accuracy = 0.75, automatic = true, fire_rate = 900, MagSize = 25, range = 250, Recoil = 0.5, reload_time = 2.2, damage = 15, Durability = 600, RagdollChance = 0, RarityName = S273, RarityPrice = 19000},
    G3 = {accuracy = 0.65, automatic = false, fire_rate = 320, MagSize = 10, range = 80, Recoil = 0.2, reload_time = 2, damage = 13, Durability = 144, RagdollChance = 0, RarityName = S274, RarityPrice = 900},
    Glock = {accuracy = 0.8, automatic = false, fire_rate = 370, MagSize = 15, range = 80, Recoil = 0.2, reload_time = 2, damage = 19, Durability = 168, RagdollChance = 0, RarityName = S275, RarityPrice = 1800},
    [S276] = {accuracy = 0.93, automatic = false, fire_rate = 50, MagSize = 5, range = 500, Recoil = 0.8, reload_time = 2.2, damage = 35, Durability = 72, KnockbackForce = 200, RagdollChance = 0.2, RarityName = S277, RarityPrice = 5000},
    M24 = {accuracy = 0.97, automatic = false, fire_rate = 50, MagSize = 7, range = 500, Recoil = 0.8, reload_time = 2, damage = 50, Durability = 120, KnockbackForce = 200, RagdollChance = 0.2, RarityName = S278, RarityPrice = 25000},
    MP5 = {accuracy = 0.85, automatic = true, fire_rate = 800, MagSize = 30, range = 200, Recoil = 0.35, reload_time = 2, damage = 19, Durability = 720, RagdollChance = 0, RarityName = S279, RarityPrice = 38000},
    P226 = {accuracy = 0.75, automatic = false, fire_rate = 370, MagSize = 7, range = 80, Recoil = 0.25, reload_time = 2, damage = 22, Durability = 180, RagdollChance = 0, RarityName = S280, RarityPrice = 2200},
    RPG = {accuracy = 0.9, automatic = false, fire_rate = 100, MagSize = 1, range = 600, Recoil = 2, reload_time = 2.6, explode_damage = 1000, Durability = 96, ExplodeKnockback = 300, ExplodeRadius = 12, RarityName = S281, RarityPrice = 90000},
    Remington = {accuracy = 0.6, automatic = false, fire_rate = 80, MagSize = 5, range = 80, Recoil = 1.5, reload_time = 2, damage = 19, Durability = 300, KnockbackForce = 300, RagdollChance = 0.4, RarityName = S282, RarityPrice = 45000},
    Sawnoff = {accuracy = 0.4, automatic = false, fire_rate = 150, MagSize = 2, range = 30, Recoil = 3, reload_time = 3, damage = 18, Durability = 240, KnockbackForce = 450, RagdollChance = 0.5, RarityName = S283, RarityPrice = 3500},
    Uzi = {accuracy = 0.7, automatic = true, fire_rate = 1200, MagSize = 20, range = 150, Recoil = 0.3, reload_time = 1.7, damage = 8, Durability = 480, RagdollChance = 0, RarityName = S284, RarityPrice = 3000},
    -- Melee Weapons
    Axe = {speed = 1.4, range = 6.5, cone_angle = 80, damage = 34, destructive = 1.6, Durability = 80, knockback_force = 250, ragdoll_chance = 0.2, RarityName = S285, RarityPrice = 3200},
    [S286] = {speed = 1.6, range = 7.5, cone_angle = 90, damage = 43, destructive = 1.2, Durability = 100, knockback_force = 300, ragdoll_chance = 0.2, RarityName = S287, RarityPrice = 16000},
    [S288] = {speed = 1.6, range = 7.5, cone_angle = 90, damage = 26, destructive = 1.2, Durability = 80, knockback_force = 300, ragdoll_chance = 0.2, RarityName = S289, RarityPrice = 900},
    [S290] = {speed = 1.9, range = 6, cone_angle = 70, damage = 17, destructive = 1, Durability = 40, knockback_force = 100, ragdoll_chance = 0.15, RarityName = S291, RarityPrice = 90},
    [S292] = {speed = 1.5, range = 6.5, cone_angle = 70, damage = 12, Durability = 30, MopCashPercentageIncrease = 20, MopSpeedPercentageIncrease = 10, RarityName = S293, RarityPrice = 100},
    [S294] = {speed = 1.6, range = 6.5, cone_angle = 75, damage = 21, destructive = 1, Durability = 50, knockback_force = 100, ragdoll_chance = 0.15, RarityName = S295, RarityPrice = 300},
    [S296] = {speed = 1.6, range = 6, cone_angle = 75, damage = 30, destructive = 0.9, Durability = 70, knockback_force = 150, ragdoll_chance = 0.1, RarityName = S297, RarityPrice = 1500},
    [S298] = {speed = 1.6, range = 6.5, cone_angle = 75, damage = 40, destructive = 1.6, Durability = 90, knockback_force = 200, ragdoll_chance = 0.15, RarityName = S299, RarityPrice = 14000},
    Crowbar = {speed = 1.6, range = 7, cone_angle = 80, damage = 31, destructive = 2, Durability = 100, knockback_force = 250, ragdoll_chance = 0.15, RarityName = S300, RarityPrice = 3000},
    [S301] = {speed = 1.5, range = 6.5, cone_angle = 70, damage = 12, Durability = 30, MopCashPercentageIncrease = 100, MopSpeedPercentageIncrease = 40, RarityName = S302, RarityPrice = 1500},
    [S303] = {speed = 1.7, range = 6.5, cone_angle = 90, damage = 28, destructive = 1, Durability = 60, knockback_force = 400, ragdoll_chance = 0.3, RarityName = S304, RarityPrice = 2400},
    [S305] = {speed = 1.5, range = 6.5, cone_angle = 70, damage = 12, Durability = 30, MopCashPercentageIncrease = 70, MopSpeedPercentageIncrease = 30, RarityName = S306, RarityPrice = 800},
    Hammer = {speed = 1.75, range = 6, cone_angle = 70, damage = 23, destructive = 1.5, Durability = 70, knockback_force = 80, ragdoll_chance = 0.1, RarityName = S307, RarityPrice = 400},
    Machette = {speed = 1.8, range = 7.25, cone_angle = 85, damage = 38, destructive = 0.9, Durability = 90, knockback_force = 100, ragdoll_chance = 0.15, RarityName = S308, RarityPrice = 14000},
    [S309] = {speed = 1.6, range = 7.5, cone_angle = 90, damage = 35, destructive = 1.4, Durability = 110, knockback_force = 350, ragdoll_chance = 0.2, RarityName = S310, RarityPrice = 4000},
    [S311] = {speed = 1.55, range = 6.5, cone_angle = 75, damage = 20, destructive = 1.5, Durability = 60, knockback_force = 150, ragdoll_chance = 0.3, RarityName = S312, RarityPrice = 150},
    Mop = {speed = 1.5, range = 6.5, cone_angle = 70, damage = 12, Durability = 30, MopCashPercentageIncrease = 0, MopSpeedPercentageIncrease = 0, RarityName = S313, RarityPrice = 0},
    [S314] = {speed = 1.4, range = 6.5, cone_angle = 80, damage = 23, destructive = 1, Durability = 40, knockback_force = 100, ragdoll_chance = 0.1, RarityName = S315, RarityPrice = 350},
    [S316] = {speed = 1.7, range = 7.5, cone_angle = 80, damage = 15, destructive = 1, Durability = 30, knockback_force = 80, ragdoll_chance = 0.1, RarityName = S317, RarityPrice = 70},
    [S318] = {speed = 1.75, range = 6.5, cone_angle = 75, damage = 16, destructive = 1, Durability = 30, knockback_force = 100, ragdoll_chance = 0.1, RarityName = S319, RarityPrice = 70},
    [S320] = {speed = 1.2, range = 7, cone_angle = 75, damage = 25, destructive = 1.3, Durability = 50, knockback_force = 250, ragdoll_chance = 0.15, RarityName = S321, RarityPrice = 600},
    Shank = {speed = 2, range = 5.5, cone_angle = 60, damage = 20, destructive = 0.7, Durability = 40, knockback_force = 50, ragdoll_chance = 0.1, RarityName = S322, RarityPrice = 300},
    Shovel = {speed = 1.2, range = 7.5, cone_angle = 75, damage = 41, destructive = 1.4, Durability = 80, knockback_force = 300, ragdoll_chance = 0.3, RarityName = S323, RarityPrice = 9000},
    [S324] = {speed = 1.5, range = 6.5, cone_angle = 70, damage = 12, Durability = 30, MopCashPercentageIncrease = 45, MopSpeedPercentageIncrease = 20, RarityName = S325, RarityPrice = 300},
    [S326] = {speed = 1.1, range = 7.25, cone_angle = 80, damage = 47, destructive = 3, Durability = 110, knockback_force = 550, ragdoll_chance = 0.5, RarityName = S327, RarityPrice = 25000},
    Switchblade = {speed = 2, range = 5.5, cone_angle = 60, damage = 29, destructive = 0.7, Durability = 60, knockback_force = 80, ragdoll_chance = 0.1, RarityName = S328, RarityPrice = 2200},
    [S329] = {speed = 1.75, range = 6.5, cone_angle = 75, damage = 65, destructive = 1.5, Durability = 120, knockback_force = 250, ragdoll_chance = 0.2, RarityName = S330, RarityPrice = 40000},
    [S331] = {speed = 2.2, range = 5.75, cone_angle = 75, damage = 50, destructive = 0.8, Durability = 110, knockback_force = 100, ragdoll_chance = 0.1, RarityName = S332, RarityPrice = 30000},
    [S333] = {speed = 2, range = 6.75, cone_angle = 75, damage = 58, destructive = 1.4, Durability = 130, knockback_force = 150, ragdoll_chance = 0.15, RarityName = S334, RarityPrice = 35000},
    Taser = {speed = 2, range = 5.25, cone_angle = 60, damage = 10, Durability = 40, knockback_force = 100, ragdoll_chance = 1, RarityName = S335, RarityPrice = 120},
    [S336] = {speed = 1.6, range = 6.5, cone_angle = 80, damage = 24, destructive = 1.2, Durability = 70, knockback_force = 150, ragdoll_chance = 0.1, RarityName = S337, RarityPrice = 450},
    [S338] = {speed = 1.45, range = 6.5, cone_angle = 80, damage = 16, destructive = 1, Durability = 25, knockback_force = 100, ragdoll_chance = 0.1, RarityName = S339, RarityPrice = 50},
    Wrench = {speed = 1.5, range = 6, cone_angle = 80, damage = 34, destructive = 1.8, Durability = 70, knockback_force = 200, ragdoll_chance = 0.15, RarityName = S340, RarityPrice = 2200}
}

-- Weapon images
getgenv().WeaponESPData.weaponImages = {
    AK47 = S341,
    Anaconda = S342,
    C9 = S343,
    Crossbow = S344,
    [S345] = S346,
    Draco = S347,
    G3 = S348,
    Glock = S349,
    [S350] = S351,
    M24 = S352,
    MP5 = S353,
    P226 = S354,
    RPG = S355,
    Remington = S356,
    Sawnoff = S357,
    Uzi = S358,
    Axe = S359,
    [S360] = S361,
    [S362] = S363,
    [S364] = S365,
    [S366] = S367,
    [S368] = S369,
    [S370] = S371,
    [S372] = S373,
    Crowbar = S374,
    [S375] = S376,
    [S377] = S378,
    [S379] = S380,
    Hammer = S381,
    Machette = S382,
    [S383] = S384,
    [S385] = S386,
    Mop = S387,
    [S388] = S389,
    [S390] = S391,
    [S392] = S393,
    [S394] = S395,
    Shank = S396,
    Shovel = S397,
    [S398] = S399,
    [S400] = S401,
    Switchblade = S402,
    [S403] = S404,
    [S405] = S406,
    [S407] = S408,
    Taser = S409,
    [S410] = S411,
    [S412] = S413,
    Wrench = S414
}

-- Rarity colors for weapon boxes
getgenv().WeaponESPData.rarityColors = {
    Common = Color3.fromRGB(169, 169, 169),
    Uncommon = Color3.fromRGB(128, 128, 128),
    Rare = Color3.fromRGB(0, 180, 0),
    Epic = Color3.fromRGB(163, 53, 238),
    Legendary = Color3.fromRGB(255, 165, 0),
    Omega = Color3.fromRGB(255, 0, 0)
}

-- Consolidated state management for weapon ESP
local WeaponESP_State = {
    enabled = false,
    connection = nil,
    playerESPs = {}
}

-- Utility functions
local function getAttribute(obj, attr)
    local success, value = pcall(function() return obj:GetAttribute(attr) end)
    return success and value or nil
end

local function identifyWeapon(tool)
    for weaponName, signature in pairs(getgenv().WeaponESPData.signatures) do
        local matched, total = 0, 0
        for attrName, expectedValue in pairs(signature) do
            local toolValue = getAttribute(tool, attrName)
            if toolValue ~= nil then
                total = total + 1
                if type(expectedValue) == S415 then
                    if math.abs(toolValue - expectedValue) <= 0.01 then matched = matched + 1 end
                elseif toolValue == expectedValue then matched = matched + 1 end
            end
        end
        if total > 0 and matched / total >= 0.7 then
            return {name = weaponName, rarity = signature.RarityName, price = signature.RarityPrice}
        end
    end
    return nil
end

local function createPlayerESP(targetPlayer)
    if targetPlayer == player or not WeaponESP_State.enabled then return end
    
    local targetCharacter = targetPlayer.Character
    if not targetCharacter then return end
    
    local existingESP = targetCharacter:FindFirstChild(S416)
    if existingESP then existingESP:Destroy() end
    
    local weapons = {}
    local function collectWeapons(container)
        for _, tool in ipairs(container:GetChildren()) do
            if tool:IsA(S417) then
                local weaponInfo = identifyWeapon(tool)
                if weaponInfo then table.insert(weapons, weaponInfo) end
            end
        end
    end
    
    local backpack = targetPlayer:FindFirstChild(S418)
    if backpack then collectWeapons(backpack) end
    collectWeapons(targetCharacter)
    
    if #weapons > 0 then
        local billboard = Instance.new(S419)
        billboard.Name = S420
        billboard.Parent = targetCharacter
        billboard.Size = UDim2.new(0, #weapons * 26, 0, 26)
        billboard.StudsOffset = Vector3.new(0, -5, 0)
        billboard.AlwaysOnTop = true
        billboard.LightInfluence = 0
        billboard.Adornee = targetCharacter:FindFirstChild(S421)
        billboard.ClipsDescendants = false
        billboard.ExtentsOffset = Vector3.new(0, 0, 0)
        billboard.ExtentsOffsetWorldSpace = Vector3.new(0, 0, 0)
        billboard.MaxDistance = math.huge
        billboard.StudsOffsetWorldSpace = Vector3.new(0, 0, 0)
        
        -- Force consistent size regardless of distance
        local connection = game:GetService("RunService").Heartbeat:Connect(function()
            if billboard and billboard.Parent then
                billboard.Size = UDim2.new(0, #weapons * 26, 0, 26)
            else
                connection:Disconnect()
            end
        end)
        
        WeaponESP_State.playerESPs[targetPlayer] = {billboard = billboard, connection = connection}
        
        local frame = Instance.new(S422)
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 1
        frame.Parent = billboard
        
        for i, weapon in ipairs(weapons) do
            -- Get rarity color for this weapon
            local rarityColor = getgenv().WeaponESPData.rarityColors[weapon.rarity] or Color3.fromRGB(255, 255, 255)
            
            -- Create individual box for each weapon
            local weaponBox = Instance.new(S423)
            weaponBox.Size = UDim2.new(0, 22, 0, 22)
            weaponBox.Position = UDim2.new(0, (i-1) * 24, 0, 2)
            weaponBox.BackgroundColor3 = rarityColor
            weaponBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
            weaponBox.BorderSizePixel = 1
            weaponBox.Parent = frame
            
            -- Add corner rounding
            local corner = Instance.new(S424)
            corner.CornerRadius = UDim.new(0, 3)
            corner.Parent = weaponBox
            
            -- Add glossy gradient effect
            local gradient = Instance.new(S425)
            gradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(0.5, rarityColor),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
            }
            gradient.Rotation = -45
            gradient.Parent = weaponBox
            
            -- Add subtle stroke for extra definition
            local stroke = Instance.new(S426)
            stroke.Color = Color3.fromRGB(255, 255, 255)
            stroke.Transparency = 0.7
            stroke.Thickness = 1
            stroke.Parent = weaponBox
            
            -- Add weapon image inside the box
            local imageLabel = Instance.new(S427)
            imageLabel.Size = UDim2.new(0, 18, 0, 18)
            imageLabel.Position = UDim2.new(0, 2, 0, 2)
            imageLabel.BackgroundTransparency = 1
            imageLabel.Image = getgenv().WeaponESPData.weaponImages[weapon.name] or S428
            imageLabel.ScaleType = Enum.ScaleType.Fit
            imageLabel.Parent = weaponBox
        end
    end
end

local function removeAllESP()
    for targetPlayer, espData in pairs(WeaponESP_State.playerESPs) do
        if espData then
            if espData.billboard and espData.billboard.Parent then 
                espData.billboard:Destroy() 
            end
            if espData.connection then
                espData.connection:Disconnect()
            end
        end
    end
    WeaponESP_State.playerESPs = {}
    
    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
        if targetPlayer.Character then
            local existingESP = targetPlayer.Character:FindFirstChild(S429)
            if existingESP then existingESP:Destroy() end
        end
    end
end

local function startESP()
    if WeaponESP_State.connection then return end
    
    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do createPlayerESP(targetPlayer) end
    
    local playerAddedConnection = game.Players.PlayerAdded:Connect(createPlayerESP)
    local playerRemovingConnection = game.Players.PlayerRemoving:Connect(function(targetPlayer)
        if WeaponESP_State.playerESPs[targetPlayer] then
            if WeaponESP_State.playerESPs[targetPlayer].billboard then
                WeaponESP_State.playerESPs[targetPlayer].billboard:Destroy()
            end
            if WeaponESP_State.playerESPs[targetPlayer].connection then
                WeaponESP_State.playerESPs[targetPlayer].connection:Disconnect()
            end
            WeaponESP_State.playerESPs[targetPlayer] = nil
        end
    end)
    
    WeaponESP_State.connection = coroutine.create(function()
        while WeaponESP_State.enabled do
            wait(2)
            if WeaponESP_State.enabled then
                for _, targetPlayer in ipairs(game.Players:GetPlayers()) do createPlayerESP(targetPlayer) end
            end
        end
    end)
    
    coroutine.resume(WeaponESP_State.connection)
    WeaponESP_State.playerESPs._connections = {playerAdded = playerAddedConnection, playerRemoving = playerRemovingConnection}
end

local function stopESP()
    WeaponESP_State.enabled = false
    if WeaponESP_State.playerESPs._connections then
        if WeaponESP_State.playerESPs._connections.playerAdded then WeaponESP_State.playerESPs._connections.playerAdded:Disconnect() end
        if WeaponESP_State.playerESPs._connections.playerRemoving then WeaponESP_State.playerESPs._connections.playerRemoving:Disconnect() end
        WeaponESP_State.playerESPs._connections = nil
    end
    removeAllESP()
    WeaponESP_State.connection = nil
end

-- Luna Toggle Integration
local Toggle = Visuals:CreateToggle({
    Name = S430,
    Description = S431,
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            WeaponESP_State.enabled = true
            startESP()
        else
            stopESP()
        end
    end
}, S432)
---------------------------------------------------------------------------------------------
-- VEHICLE MODIFICATION SYSTEM SCRIPT (Optimized)
---------------------------------------------------------------------------------------------

-- Consolidated state management for vehicle modification
local VehicleMod_State = {
    sliderValues = {},
    attributeConfigs = {
        {name = S433, min = 0, max = 100, default = 8, increment = 1},
        {name = S434, min = 0, max = 100, default = 10, increment = 1},
        {name = S435, min = 0, max = 50, default = 1, increment = 1},
        {name = S436, min = 0, max = 100, default = 23, increment = 1},
        {name = S437, min = 0, max = 50000, default = 20000, increment = 100},
        {name = S438, min = 0, max = 2000, default = 500, increment = 10},
        {name = S439, min = 0, max = 100, default = 5, increment = 1}
    }
}

-- Initialize slider values with defaults
for _, config in ipairs(VehicleMod_State.attributeConfigs) do
    VehicleMod_State.sliderValues[config.name] = config.default
end

-- Create sliders for each attribute using Luna system
for _, config in ipairs(VehicleMod_State.attributeConfigs) do
    Vehicle:CreateSlider({
        Name = config.name,
        Range = {config.min, config.max},
        Increment = config.increment,
        CurrentValue = config.default,
        Callback = function(Value)
            VehicleMod_State.sliderValues[config.name] = Value
        end
    }, S440 .. config.name)
end

-- Apply Changes Button using Luna system
local ApplyButton = Vehicle:CreateButton({
    Name = S441,
    Description = S442,
    Callback = function()
        -- Function to recursively find and update motors
        local function updateMotorsInObject(obj)
            -- Check if this object has motor attributes
            for attributeName, value in pairs(VehicleMod_State.sliderValues) do
                if obj:GetAttribute(attributeName) ~= nil then
                    obj:SetAttribute(attributeName, value)
                end
            end
            
            -- Recursively check children
            for _, child in pairs(obj:GetChildren()) do
                updateMotorsInObject(child)
            end
        end
        
        -- Find all vehicles and their motors
        local vehiclesFolder = workspace:FindFirstChild(S443)
        if not vehiclesFolder then
            return
        end
        
        local motorsChanged = 0
        
        -- Process all vehicles in the Vehicles folder
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA(S444) or vehicle:IsA(S445) then
                updateMotorsInObject(vehicle)
            end
        end
        
        -- Also check for a direct Motors folder (backward compatibility)
        local motorsFolder = vehiclesFolder:FindFirstChild(S446)
        if motorsFolder then
            for _, motor in pairs(motorsFolder:GetChildren()) do
                for attributeName, value in pairs(VehicleMod_State.sliderValues) do
                    if motor:GetAttribute(attributeName) ~= nil then
                        motor:SetAttribute(attributeName, value)
                        motorsChanged = motorsChanged + 1
                    end
                end
            end
        end
        
        -- Count total attributes changed
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA(S447) or vehicle:IsA(S448) then
                local function countAttributes(obj)
                    for attributeName, value in pairs(VehicleMod_State.sliderValues) do
                        if obj:GetAttribute(attributeName) ~= nil then
                            motorsChanged = motorsChanged + 1
                        end
                    end
                    for _, child in pairs(obj:GetChildren()) do
                        countAttributes(child)
                    end
                end
                countAttributes(vehicle)
            end
        end
    end
})
---------------------------------------------------------------------------------------
--SPEED BOOST RUNNING (Fixed Optimized)
---------------------------------------------------------------------------------------

-- Consolidated state management for speed boost
local SpeedBoost_State = {
    enabled = false,
    connection = nil,
    spamConnection = nil
}

local function enableAutoSprint()
    if not player.Character then return end
    
    -- Wait for game systems to fully load
    wait(2)
    
    SpeedBoost_State.connection = game:GetService("RunService").Heartbeat:Connect(function()
        if not player.Character then
            if SpeedBoost_State.connection then
                SpeedBoost_State.connection:Disconnect()
                SpeedBoost_State.connection = nil
            end
            return
        end
        
        if SpeedBoost_State.enabled then
            -- Check if player is moving
            local humanoid = player.Character:FindFirstChild(S449)
            if humanoid and humanoid.MoveDirection.Magnitude > 0.1 then
                
                -- Set speed multiplier for 21 speed (16 * 1.3125 = 21)
                player:SetAttribute(S450, 1.3125)
                
                -- Try to access the keybind system to simulate sprint key press
                local success = pcall(function()
                    local keybindModule = require(game.ReplicatedStorage.Modules.Game.Keybinds)
                    
                    -- Simulate holding the sprint key
                    if keybindModule.hook_action then
                        -- Force the sprint action to be active
                        keybindModule.hook_action(S451, function()
                            return true -- Always return true (sprint key pressed)
                        end)
                    end
                end)
                
                -- Also try to maintain the sprint state directly
                pcall(function()
                    local sprintModule = require(game.ReplicatedStorage.Modules.Game.Sprint)
                    if sprintModule.sprinting and sprintModule.sprinting.get() == false then
                        sprintModule.sprinting.set(true)
                    end
                    
                    -- Keep stamina topped up
                    if sprintModule.sprint_bar then
                        sprintModule.sprint_bar.set(1)
                    end
                end)
            else
                -- Reset speed multiplier when not moving
                player:SetAttribute(S452, 1)
            end
        end
    end)
end

local function startSprintSpam()
    -- The working shift spam exploit - every 0.5 seconds
    SpeedBoost_State.spamConnection = spawn(function()
        while SpeedBoost_State.enabled do
            wait(0.5) -- Every 0.5 seconds
            
            if SpeedBoost_State.enabled and player.Character then
                local humanoid = player.Character:FindFirstChild(S453)
                if humanoid and humanoid.MoveDirection.Magnitude > 0.1 then
                    pcall(function()
                        local sprintModule = require(game.ReplicatedStorage.Modules.Game.Sprint)
                        
                        -- Directly call the sprinting state toggle like the real shift key does
                        if sprintModule.sprinting then
                            -- Simulate a quick sprint toggle (like tapping shift)
                            sprintModule.sprinting.set(false) -- Turn off
                            wait(0.05) -- Brief pause
                            sprintModule.sprinting.set(true)  -- Turn back on
                        end
                    end)
                end
            end
        end
    end)
end

local function stopAutoSprint()
    if SpeedBoost_State.connection then
        SpeedBoost_State.connection:Disconnect()
        SpeedBoost_State.connection = nil
    end
    -- spamConnection doesnS707s a spawn() thread
    SpeedBoost_State.spamConnection = nil
    -- Reset speed when disabled
    if player then
        player:SetAttribute(S454, 1)
    end
end

-- Apply to current and future characters
local function setupCharacter()
    if SpeedBoost_State.enabled then
        enableAutoSprint()
    end
end

if player.Character then
    setupCharacter()
end

player.CharacterAdded:Connect(function()
    wait(3)
    setupCharacter()
end)

-- Luna Toggle Integration
local Toggle = Player:CreateToggle({
    Name = S455,
    Description = S456,
    CurrentValue = false,
    Callback = function(Value)
        SpeedBoost_State.enabled = Value
        
        if SpeedBoost_State.enabled then
            -- Start the auto sprint system
            if player.Character then
                enableAutoSprint()
            end
            startSprintSpam()
        else
            -- Stop the auto sprint system
            stopAutoSprint()
        end
    end
}, S457) -- Unique flag for configuration saving

-------------------------------------------------------------------------------------
--SUPER JUMP (Optimized)
-------------------------------------------------------------------------------------

-- Consolidated state management for super jump
local SuperJump_State = {
    enabled = false
}

local function updateJumpPower(character, enabled)
    local humanoid = character:WaitForChild(S458, 10)
    if not humanoid then
        return
    end
    
    if enabled then
        -- Enable UseJumpPower (this makes JumpPower work instead of JumpHeight)
        humanoid.UseJumpPower = true
        
        -- Set JumpPower to 65
        humanoid.JumpPower = 65
    else
        -- Reset to default values
        humanoid.UseJumpPower = true -- Keep this true but reset power
        humanoid.JumpPower = 23 -- Default jump power (changed from 50 to 23)
    end
end

local function setupCharacter(character)
    updateJumpPower(character, SuperJump_State.enabled)
end

-- Apply to current character if it exists
if player.Character then
    setupCharacter(player.Character)
end

-- Apply to future characters when they spawn
player.CharacterAdded:Connect(setupCharacter)

-- Luna Toggle Integration
local Toggle = Player:CreateToggle({
    Name = S459,
    Description = S460,
    CurrentValue = false,
    Callback = function(Value)
        SuperJump_State.enabled = Value
        
        -- Apply to current character if it exists
        if player.Character then
            updateJumpPower(player.Character, SuperJump_State.enabled)
        end
    end
}, S461) -- Unique flag for configuration saving

Player:CreateDivider()
---------------------------------------------------------------------------
--Infi Stamina (Optimized)
---------------------------------------------------------------------------

-- Consolidated state management for infinite stamina
local InfiniteStamina_State = {
    enabled = false,
    connection = nil,
    spamConnection = nil
}

local function enableInfiniteStamina()
    if not player.Character then return end
    
    -- Wait for game systems to fully load
    wait(2)
    
    InfiniteStamina_State.connection = game:GetService("RunService").Heartbeat:Connect(function()
        if not player.Character then
            if InfiniteStamina_State.connection then
                InfiniteStamina_State.connection:Disconnect()
                InfiniteStamina_State.connection = nil
            end
            return
        end
        
        if InfiniteStamina_State.enabled then
            -- Check if player is moving
            local humanoid = player.Character:FindFirstChild(S462)
            if humanoid and humanoid.MoveDirection.Magnitude > 0.1 then
                
                -- ESSENTIAL: Hook the sprint action to enable sprinting
                pcall(function()
                    local keybindModule = require(game.ReplicatedStorage.Modules.Game.Keybinds)
                    
                    if keybindModule.hook_action then
                        keybindModule.hook_action(S463, function()
                            return true -- Always return true (sprint key pressed)
                        end)
                    end
                end)
                
                -- ESSENTIAL: Maintain the sprint state
                pcall(function()
                    local sprintModule = require(game.ReplicatedStorage.Modules.Game.Sprint)
                    if sprintModule.sprinting and sprintModule.sprinting.get() == false then
                        sprintModule.sprinting.set(true)
                    end
                    
                    -- Keep stamina topped up
                    if sprintModule.sprint_bar then
                        sprintModule.sprint_bar.set(1)
                    end
                end)
            end
        end
    end)
end

local function startStaminaSpam()
    -- The shift spam exploit for infinite stamina
    InfiniteStamina_State.spamConnection = spawn(function()
        while InfiniteStamina_State.enabled do
            wait(0.5) -- Every 0.5 seconds
            
            if InfiniteStamina_State.enabled and player.Character then
                local humanoid = player.Character:FindFirstChild(S464)
                if humanoid and humanoid.MoveDirection.Magnitude > 0.1 then
                    pcall(function()
                        local sprintModule = require(game.ReplicatedStorage.Modules.Game.Sprint)
                        
                        -- Simulate the shift key spam exploit
                        if sprintModule.sprinting then
                            -- Quick sprint toggle (like manually tapping shift)
                            sprintModule.sprinting.set(false) -- Turn off
                            wait(0.05) -- Brief pause
                            sprintModule.sprinting.set(true)  -- Turn back on
                        end
                    end)
                end
            end
        end
    end)
end

local function stopInfiniteStamina()
    if InfiniteStamina_State.connection then
        InfiniteStamina_State.connection:Disconnect()
        InfiniteStamina_State.connection = nil
    end
    -- spamConnection doesnS708s a spawn() thread
    InfiniteStamina_State.spamConnection = nil
end

local function setupCharacter()
    if InfiniteStamina_State.enabled then
        enableInfiniteStamina()
    end
end

-- Apply to current and future characters
if player.Character then
    setupCharacter()
end

player.CharacterAdded:Connect(function()
    wait(3)
    setupCharacter()
end)

-- Luna Toggle Integration
local Toggle = Player:CreateToggle({
    Name = S465,
    Description = S466,
    CurrentValue = false,
    Callback = function(Value)
        InfiniteStamina_State.enabled = Value
        
        if InfiniteStamina_State.enabled then
            -- Start the infinite stamina system
            if player.Character then
                enableInfiniteStamina()
            end
            startStaminaSpam()
        else
            -- Stop the infinite stamina system
            stopInfiniteStamina()
        end
    end
}, S467) -- Unique flag for configuration saving
------------------------------------------------------------------------------
--WEAPON (Optimized)
------------------------------------------------------------------------------

-- Consolidated state management for weapon modification
local WeaponMod_State = {
    enabled = false,
    attributeMultipliers = {
        accuracy = 1,      -- Default multiplier for accuracy (0.75 → 1 * multiplier)
        fireRate = 1,      -- Default multiplier for fire rate (370 → 1000 * multiplier)
        magSize = 1,       -- Default multiplier for magazine size (7 → 1000 * multiplier)
        range = 1,         -- Default multiplier for range (80 → 1000 * multiplier)
        recoil = 1,        -- Default multiplier for recoil (0.25 → 0 * multiplier)
        reloadTime = 1     -- Default multiplier for reload time (2 → 0 * multiplier)
    },
    gunConfigs = {
        [S468] = {
            modifications = {
                {original = 0.65, target = 1, type = S469},
                {original = 320, target = 1000, type = S470},
                {original = 10, target = 1000, type = S471},
                {original = 80, target = 1000, type = S472},
                {original = 0.2, target = 0, type = S473},
                {original = 2, target = 0, type = S474}
            }
        },
        [S475] = {
            modifications = {
                {original = 0.85, target = 1, type = S476},
                {original = 600, target = 1000, type = S477},
                {original = 30, target = 1000, type = S478},
                {original = 300, target = 1000, type = S479},
                {original = 0.4, target = 0, type = S480},
                {original = 2.2, target = 0, type = S481}
            }
        },
        [S482] = {
            modifications = {
                {original = 0.95, target = 1, type = S483},
                {original = 80, target = 1000, type = S484},
                {original = 6, target = 1000, type = S485},
                {original = 120, target = 1000, type = S486},
                {original = 0.8, target = 0, type = S487},
                {original = 2, target = 0, type = S488}
            }
        },
        [S489] = {
            modifications = {
                {original = 0.7, target = 1, type = S490},
                {original = 300, target = 1000, type = S491},
                {original = 8, target = 1000, type = S492},
                {original = 80, target = 1000, type = S493},
                {original = 0.2, target = 0, type = S494},
                {original = 2, target = 0, type = S495}
            }
        },
        [S496] = {
            modifications = {
                {original = 0.95, target = 1, type = S497},
                {original = 100, target = 1000, type = S498},
                {original = 1, target = 1000, type = S499},
                {original = 500, target = 1000, type = S500},
                {original = 0.3, target = 0, type = S501},
                {original = 2, target = 0, type = S502}
            }
        },
        [S503] = {
            modifications = {
                {original = 0.5, target = 1, type = S504},
                {original = 100, target = 1000, type = S505},
                {original = 2, target = 1000, type = S506},
                {original = 50, target = 1000, type = S507},
                {original = 2, target = 0, type = S508},
                {original = 3, target = 0, type = S509}
            }
        },
        [S510] = {
            modifications = {
                {original = 0.75, target = 1, type = S511},
                {original = 900, target = 1000, type = S512},
                {original = 25, target = 1000, type = S513},
                {original = 250, target = 1000, type = S514},
                {original = 0.5, target = 0, type = S515},
                {original = 2.2, target = 0, type = S516}
            }
        },
        [S517] = {
            modifications = {
                {original = 0.8, target = 1, type = S518},
                {original = 100, target = 1000, type = S519},
                {original = 1, target = 1000, type = S520},
                {original = 500, target = 1000, type = S521},
                {original = 1, target = 0, type = S522},
                {original = 0.9, target = 0, type = S523}
            }
        },
        [S524] = {
            modifications = {
                {original = 0.8, target = 1, type = S525},
                {original = 370, target = 1000, type = S526},
                {original = 15, target = 1000, type = S527},
                {original = 80, target = 1000, type = S528},
                {original = 0.2, target = 0, type = S529},
                {original = 2, target = 0, type = S530}
            }
        },
        [S531] = {
            modifications = {
                {original = 0.93, target = 1, type = S532},
                {original = 50, target = 1000, type = S533},
                {original = 5, target = 1000, type = S534},
                {original = 500, target = 1000, type = S535},
                {original = 0.8, target = 0, type = S536},
                {original = 2.2, target = 0, type = S537}
            }
        },
        [S538] = {
            modifications = {
                {original = 0.97, target = 1, type = S539},
                {original = 50, target = 1000, type = S540},
                {original = 7, target = 1000, type = S541},
                {original = 500, target = 1000, type = S542},
                {original = 0.8, target = 0, type = S543},
                {original = 2, target = 0, type = S544}
            }
        },
        [S545] = {
            modifications = {
                {original = 0.85, target = 1, type = S546},
                {original = 800, target = 1000, type = S547},
                {original = 30, target = 1000, type = S548},
                {original = 200, target = 1000, type = S549},
                {original = 0.35, target = 0, type = S550},
                {original = 2, target = 0, type = S551}
            }
        },
        [S552] = {
            modifications = {
                {original = 0.75, target = 1, type = S553},
                {original = 370, target = 1000, type = S554},
                {original = 7, target = 1000, type = S555},
                {original = 80, target = 1000, type = S556},
                {original = 0.25, target = 0, type = S557},
                {original = 2, target = 0, type = S558}
            }
        },
        [S559] = {
            modifications = {
                {original = 0.9, target = 1, type = S560},
                {original = 100, target = 1000, type = S561},
                {original = 1, target = 1000, type = S562},
                {original = 600, target = 1000, type = S563},
                {original = 2, target = 0, type = S564},
                {original = 2.6, target = 0, type = S565}
            }
        },
        [S566] = {
            modifications = {
                {original = 0.6, target = 1, type = S567},
                {original = 80, target = 1000, type = S568},
                {original = 5, target = 1000, type = S569},
                {original = 80, target = 1000, type = S570},
                {original = 1.5, target = 0, type = S571},
                {original = 2, target = 0, type = S572}
            }
        },
        [S573] = {
            modifications = {
                {original = 0.4, target = 1, type = S574},
                {original = 150, target = 1000, type = S575},
                {original = 2, target = 1000, type = S576},
                {original = 30, target = 1000, type = S577},
                {original = 3, target = 0, type = S578},
                {original = 3, target = 0, type = S579}
            }
        },
        [S580] = {
            modifications = {
                {original = 0.7, target = 1, type = S581},
                {original = 1200, target = 1000, type = S582},
                {original = 20, target = 1000, type = S583},
                {original = 150, target = 1000, type = S584},
                {original = 0.3, target = 0, type = S585},
                {original = 1.7, target = 0, type = S586}
            }
        }
    }
}

-- Function to restore original attributes
local function RestoreGunAttributes(tool)
    if not tool then return end
    
    local gunConfig = WeaponMod_State.gunConfigs[tool.Name]
    if not gunConfig then return end
    
    wait(0.1)
    
    for _, modification in ipairs(gunConfig.modifications) do
        for attrName, attrValue in pairs(tool:GetAttributes()) do
            if type(attrValue) == S587 then
                if math.abs(attrValue - (modification.target * WeaponMod_State.attributeMultipliers[modification.type])) < 0.01 then
                    tool:SetAttribute(attrName, modification.original)
                end
            end
        end
    end
end

-- Function to modify attributes for detected guns
local function ModifyGunAttributes(tool)
    if not tool then return end
    if not WeaponMod_State.enabled then return end
    
    local gunConfig = WeaponMod_State.gunConfigs[tool.Name]
    if not gunConfig then return end
    
    wait(0.1)
    
    for _, modification in ipairs(gunConfig.modifications) do
        for attrName, attrValue in pairs(tool:GetAttributes()) do
            if type(attrValue) == S588 then
                if math.abs(attrValue - modification.original) < 0.01 then
                    -- Apply individual multiplier based on attribute type
                    tool:SetAttribute(attrName, modification.target * WeaponMod_State.attributeMultipliers[modification.type])
                end
            end
        end
    end
end

-- Function to modify existing guns
local function ModifyExistingGuns()
    if not player.Character then return end
    
    for _, item in pairs(player.Character:GetChildren()) do
        if item:IsA(S589) then
            ModifyGunAttributes(item)
        end
    end
    
    for _, item in pairs(player.Backpack:GetChildren()) do
        if item:IsA(S590) then
            ModifyGunAttributes(item)
        end
    end
end

-- Function to restore existing guns
local function RestoreExistingGuns()
    if not player.Character then return end
    
    for _, item in pairs(player.Character:GetChildren()) do
        if item:IsA(S591) then
            RestoreGunAttributes(item)
        end
    end
    
    for _, item in pairs(player.Backpack:GetChildren()) do
        if item:IsA(S592) then
            RestoreGunAttributes(item)
        end
    end
end

-- Set up monitoring
player.Backpack.ChildAdded:Connect(function(newItem)
    if newItem:IsA(S593) and WeaponMod_State.enabled then
        ModifyGunAttributes(newItem)
    end
end)

player.CharacterAdded:Connect(function(character)
    character.ChildAdded:Connect(function(newItem)
        if newItem:IsA(S594) and WeaponMod_State.enabled then
            ModifyGunAttributes(newItem)
        end
    end)
end)

if player.Character then
    player.Character.ChildAdded:Connect(function(newItem)
        if newItem:IsA(S595) and WeaponMod_State.enabled then
            ModifyGunAttributes(newItem)
        end
    end)
end

-- Luna UI Integration - Individual Sliders for Each Attribute
Weapon:CreateSlider({
    Name = S596,
    Range = {0.1, 1}, -- 0.1x to 1x accuracy multiplier (max 100% accuracy)
    Increment = 0.1,
    CurrentValue = 1,
    Callback = function(Value)
        WeaponMod_State.attributeMultipliers.accuracy = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        end
    end
}, S597)

Weapon:CreateSlider({
    Name = S598,
    Range = {1, 1000}, -- 1x to 1000x fire rate multiplier
    Increment = 10,
    CurrentValue = 1,
    Callback = function(Value)
        WeaponMod_State.attributeMultipliers.fireRate = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        end
    end
}, S599)

Weapon:CreateSlider({
    Name = S600,
    Range = {1, 1000}, -- 1x to 1000x magazine size multiplier
    Increment = 10,
    CurrentValue = 1,
    Callback = function(Value)
        WeaponMod_State.attributeMultipliers.magSize = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        end
    end
}, S601)

Weapon:CreateSlider({
    Name = S602,
    Range = {1, 1000}, -- 1x to 1000x range multiplier
    Increment = 10,
    CurrentValue = 1,
    Callback = function(Value)
        WeaponMod_State.attributeMultipliers.range = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        end
    end
}, S603)

Weapon:CreateSlider({
    Name = S604,
    Range = {0, 2}, -- 0x to 2x recoil multiplier (0 = no recoil)
    Increment = 0.1,
    CurrentValue = 1,
    Callback = function(Value)
        WeaponMod_State.attributeMultipliers.recoil = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        end
    end
}, S605)

Weapon:CreateSlider({
    Name = S606,
    Range = {0, 2}, -- 0x to 2x reload time multiplier (0 = instant reload)
    Increment = 0.1,
    CurrentValue = 1,
    Callback = function(Value)
        WeaponMod_State.attributeMultipliers.reloadTime = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        end
    end
}, S607)

-- Main Toggle (placed at the bottom as requested)
local Toggle = Weapon:CreateToggle({
    Name = S608,
    Description = S609,
    CurrentValue = false,
    Callback = function(Value)
        WeaponMod_State.enabled = Value
        if WeaponMod_State.enabled then
            ModifyExistingGuns()
        else
            RestoreExistingGuns()
        end
    end
}, S610)

------------------------------------------------------------------------------
--AUTO RESPAWN (Optimized)
------------------------------------------------------------------------------

-- Consolidated state management for auto respawn
local AutoRespawn_State = {
    enabled = false,
    isRespawning = false,
    connections = {}
}

-- Function to find and click the respawn button
local function clickRespawnButton()
    if AutoRespawn_State.isRespawning or not AutoRespawn_State.enabled then return end
    AutoRespawn_State.isRespawning = true
    
    pcall(function()
        local playerGui = player.PlayerGui
        local deathScreen = playerGui:FindFirstChild(S611)
        
        if deathScreen then
            local deathScreenHolder = deathScreen:FindFirstChild(S612)
            if deathScreenHolder then
                local frame = deathScreenHolder:FindFirstChild(S613)
                if frame then
                    local respawnButtonFrame = frame:FindFirstChild(S614)
                    if respawnButtonFrame then
                        local respawnButton = respawnButtonFrame:FindFirstChild(S615)
                        if respawnButton and respawnButton.Visible and respawnButton.Parent.Visible then
                            -- Multiple click methods to ensure it works
                            
                            -- Method 1: Fire the click event
                            for _, connection in pairs(getconnections(respawnButton.MouseButton1Click)) do
                                connection:Fire()
                            end
                            
                            -- Method 2: Use GuiService
                            game:GetService(S616):FireClick(respawnButton)
                            
                            -- Method 3: Simulate mouse click
                            local VirtualInputManager = game:GetService(S617)
                            local buttonPos = respawnButton.AbsolutePosition
                            local buttonSize = respawnButton.AbsoluteSize
                            local centerX = buttonPos.X + buttonSize.X/2
                            local centerY = buttonPos.Y + buttonSize.Y/2
                            
                            VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 1)
                            VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 1)
                            
                            return true
                        end
                    end
                end
            end
        end
    end)
    
    AutoRespawn_State.isRespawning = false
    return false
end

-- Continuous monitoring function
local function startAutoRespawn()
    if AutoRespawn_State.connections.heartbeat then 
        AutoRespawn_State.connections.heartbeat:Disconnect() 
    end
    
    AutoRespawn_State.connections.heartbeat = game:GetService("RunService").Heartbeat:Connect(function()
        if not AutoRespawn_State.enabled then return end
        
        if player.Character == nil or 
           (player.Character and player.Character:FindFirstChild(S618) and player.Character.Humanoid.Health <= 0) then
            
            if clickRespawnButton() then
                wait(2) -- Wait before checking again
            end
        end
    end)
end

-- Monitor for death screen appearance
local function monitorDeathScreen()
    local playerGui = player:WaitForChild(S619)
    
    if AutoRespawn_State.connections.deathScreen then 
        AutoRespawn_State.connections.deathScreen:Disconnect() 
    end
    
    -- Watch for DeathScreen being added
    AutoRespawn_State.connections.deathScreen = playerGui.ChildAdded:Connect(function(child)
        if child.Name == S620 and AutoRespawn_State.enabled then
            wait(0.1) -- Small delay for GUI to load
            
            spawn(function()
                for attempts = 1, 50 do -- Try for 5 seconds
                    if not (child.Parent and AutoRespawn_State.enabled) then break end
                    if clickRespawnButton() then break end
                    wait(0.1)
                end
            end)
        end
    end)
end

-- Monitor humanoid death
local function setupDeathMonitoring()
    local function connectCharacterDeath(character)
        table.insert(AutoRespawn_State.connections, character:WaitForChild(S621).Died:Connect(function()
            if not AutoRespawn_State.enabled then return end
            wait(0.5) -- Wait for death screen
            
            -- Keep trying to click respawn button
            spawn(function()
                for i = 1, 30 do -- Try for 3 seconds
                    if not AutoRespawn_State.enabled then break end
                    if clickRespawnButton() then break end
                    wait(0.1)
                end
            end)
        end))
    end
    
    if AutoRespawn_State.connections.characterAdded then 
        AutoRespawn_State.connections.characterAdded:Disconnect() 
    end
    
    AutoRespawn_State.connections.characterAdded = player.CharacterAdded:Connect(connectCharacterDeath)
    
    -- Setup for current character if it exists
    if player.Character and player.Character:FindFirstChild(S622) then
        connectCharacterDeath(player.Character)
    end
end

-- Function to enable auto respawn
local function enableAutoRespawn()
    AutoRespawn_State.enabled = true
    monitorDeathScreen()
    setupDeathMonitoring()
    startAutoRespawn()
end

-- Function to disable auto respawn
local function disableAutoRespawn()
    AutoRespawn_State.enabled = false
    
    -- Disconnect all connections
    for _, connection in pairs(AutoRespawn_State.connections) do
        if connection and connection.Disconnect then
            connection:Disconnect()
        end
    end
    AutoRespawn_State.connections = {}
end

-- Luna toggle integration
local AutoRespawnToggle = Player:CreateToggle({
    Name = S623,
    Description = S624,
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            enableAutoRespawn()
        else
            disableAutoRespawn()
        end
    end
}, S625)

-------------------------------------------------------------------------------
--AIMBOT (Optimized)
-------------------------------------------------------------------------------

-- Consolidated state management for aimbot
local Aimbot_State = {
    config = {
        LOCK_DISTANCE = 10000,
        CAMERA_HEIGHT_OFFSET = 0.5,
        FOV_RADIUS = 200,
        SHOW_FOV_CIRCLE = true,
        WHITELIST = {},
        WHITELISTED_PLAYERS = {},
        AIMBOT_ENABLED = false,
        wasLeftControlDown = false
    },
    currentTarget = nil,
    fovCircle = nil,
    aimConnection = nil
}

-- Core Functions
local function updatePlayerList()
    local names = {}
    for _, p in pairs(game.Players:GetPlayers()) do
        if p ~= player then table.insert(names, p.Name) end
    end
    return names
end

local function cleanWhitelist()
    local current = {}
    for _, p in pairs(game.Players:GetPlayers()) do current[p.Name] = true end
    for name, _ in pairs(Aimbot_State.config.WHITELIST) do
        if not current[name] then
            Aimbot_State.config.WHITELIST[name] = nil
        end
    end
end

local function createDrawings()
    if Aimbot_State.fovCircle then Aimbot_State.fovCircle:Destroy() end
    
    Aimbot_State.fovCircle = Drawing.new(S626)
    Aimbot_State.fovCircle.Radius = Aimbot_State.config.FOV_RADIUS
    Aimbot_State.fovCircle.Color = Color3.new(1, 1, 1)
    Aimbot_State.fovCircle.Transparency = 0.5
    Aimbot_State.fovCircle.Visible = false
    Aimbot_State.fovCircle.Thickness = 2
    Aimbot_State.fovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
end

local function updateVisuals()
    if Aimbot_State.fovCircle then
        Aimbot_State.fovCircle.Visible = Aimbot_State.config.SHOW_FOV_CIRCLE and Aimbot_State.config.AIMBOT_ENABLED
        Aimbot_State.fovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
    end
end

local function isInFOV(target)
    local char = player.Character
    if not char or not target.Character then return false end
    
    local head = target.Character:FindFirstChild(S627)
    if not head then return false end
    
    local center = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
    local screen = workspace.CurrentCamera:WorldToScreenPoint(head.Position)
    local dist = (Vector2.new(screen.X, screen.Y) - center).Magnitude
    
    return dist <= Aimbot_State.config.FOV_RADIUS
end

local function isVisible(char)
    if not char or not player.Character then return false end
    
    local head = char:FindFirstChild(S628)
    local root = player.Character:FindFirstChild(S629)
    if not head or not root then return false end
    
    local params = RaycastParams.new()
    params.FilterType = Enum.RaycastFilterType.Blacklist
    params.FilterDescendantsInstances = {player.Character}
    
    local result = workspace:Raycast(root.Position, 
        (head.Position - root.Position).Unit * Aimbot_State.config.LOCK_DISTANCE, params)
    
    return result == nil or result.Instance:IsDescendantOf(char)
end

local function findTarget()
    local char = player.Character
    if not char then return nil end
    
    local root = char:FindFirstChild(S630)
    if not root then return nil end
    
    local closest = nil
    local shortest = Aimbot_State.config.LOCK_DISTANCE
    
    for _, p in pairs(game.Players:GetPlayers()) do
        if p ~= player and not Aimbot_State.config.WHITELIST[p.Name] then
            local pChar = p.Character
            local pRoot = pChar and pChar:FindFirstChild(S631)
            
            if pRoot then
                local dist = (pRoot.Position - root.Position).Magnitude
                if dist < shortest and isVisible(pChar) and isInFOV(p) then
                    closest = p
                    shortest = dist
                end
            end
        end
    end
    
    return closest
end

local function aimNormal(target)
    -- Clear any existing target and connection
    if Aimbot_State.currentTarget then
        Aimbot_State.currentTarget = nil
    end
    if Aimbot_State.aimConnection then
        Aimbot_State.aimConnection:Disconnect()
        Aimbot_State.aimConnection = nil
    end
    
    Aimbot_State.currentTarget = target
    
    Aimbot_State.aimConnection = game:GetService("RunService").RenderStepped:Connect(function()
        if not Aimbot_State.config.AIMBOT_ENABLED or 
           not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) or
           not Aimbot_State.currentTarget or not Aimbot_State.currentTarget.Character or
           not Aimbot_State.currentTarget.Character:FindFirstChild(S632) then
            
            if Aimbot_State.aimConnection then
                Aimbot_State.aimConnection:Disconnect()
                Aimbot_State.aimConnection = nil
            end
            Aimbot_State.currentTarget = nil
            return
        end
        
        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, 
            Aimbot_State.currentTarget.Character.Head.Position + Vector3.new(0, Aimbot_State.config.CAMERA_HEIGHT_OFFSET, 0))
    end)
end

-- Initialize
createDrawings()

-- Luna UI Components
Aimbot:CreateToggle({
    Name = S633,
    Description = S634,
    CurrentValue = false,
    Callback = function(Value)
        Aimbot_State.config.AIMBOT_ENABLED = Value
        if not Value then 
            Aimbot_State.currentTarget = nil
            if Aimbot_State.aimConnection then
                Aimbot_State.aimConnection:Disconnect()
                Aimbot_State.aimConnection = nil
            end
        end
    end
}, S635)

Aimbot:CreateSlider({
    Name = S636,
    Range = {10, 1000},
    Increment = 10,
    CurrentValue = 200,
    Callback = function(Value)
        Aimbot_State.config.FOV_RADIUS = Value
        if Aimbot_State.fovCircle then Aimbot_State.fovCircle.Radius = Value end
    end
}, S637)

Aimbot:CreateToggle({
    Name = S638,
    Description = S639,
    CurrentValue = true,
    Callback = function(Value)
        Aimbot_State.config.SHOW_FOV_CIRCLE = Value
    end
}, S640)

Aimbot:CreateDropdown({
    Name = S641,
    Description = S642,
    Options = updatePlayerList(),
    CurrentOption = {},
    MultipleOptions = true,
    Callback = function(Options)
        Aimbot_State.config.WHITELIST = {}
        local opts = type(Options) == S643 and Options or {Options}
        for _, name in pairs(opts) do
            Aimbot_State.config.WHITELIST[name] = true
        end
        Aimbot_State.config.WHITELISTED_PLAYERS = Options
    end
}, S644)

-- Event Handlers
game.Players.PlayerAdded:Connect(function(p)
    wait(1)
    cleanWhitelist()
end)

game.Players.PlayerRemoving:Connect(function(p)
    if Aimbot_State.config.WHITELIST[p.Name] then
        Aimbot_State.config.WHITELIST[p.Name] = nil
    end
    if Aimbot_State.currentTarget == p then 
        Aimbot_State.currentTarget = nil
    end
    cleanWhitelist()
end)

-- Main Loop
game:GetService("RunService").RenderStepped:Connect(function()
    local ctrl = game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl)
    
    if Aimbot_State.config.AIMBOT_ENABLED then
        -- Check for left control activation
        if ctrl and not Aimbot_State.config.wasLeftControlDown then
            local target = findTarget()
            if target then
                aimNormal(target)
            end
        end
        
        Aimbot_State.config.wasLeftControlDown = ctrl
    end
    
    updateVisuals()
end)

-- FOV Toggle
game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.O then
        Aimbot_State.config.SHOW_FOV_CIRCLE = not Aimbot_State.config.SHOW_FOV_CIRCLE
    end
end)
----------------------------------------------------------------------------------------------------------------------------
--COMBAT (Optimized)
----------------------------------------------------------------------------------------------------------------------------

-- Consolidated state management for combat
local Combat_State = {
    enabled = false,
    customRange = 50,
    originalAttributes = {},
    meleeWeapons = {
        [S645] = {speed = 1.4, range = 6.5},
        [S646] = {speed = 1.6, range = 7.5},
        [S647] = {speed = 1.6, range = 7.5},
        [S648] = {speed = 1.9, range = 6},
        [S649] = {speed = 1.5, range = 6.5},
        [S650] = {speed = 1.6, range = 6.5},
        [S651] = {speed = 1.6, range = 6},
        [S652] = {speed = 1.6, range = 6.5},
        [S653] = {speed = 1.6, range = 7},
        [S654] = {speed = 1.5, range = 6.5},
        [S655] = {speed = 1.7, range = 6.5},
        [S656] = {speed = 1.5, range = 6.5},
        [S657] = {speed = 1.75, range = 6},
        [S658] = {speed = 1.8, range = 7.25},
        [S659] = {speed = 1.6, range = 7.5},
        [S660] = {speed = 1.55, range = 6.5},
        [S661] = {speed = 1.5, range = 6.5},
        [S662] = {speed = 1.4, range = 6.5},
        [S663] = {speed = 1.7, range = 7.5},
        [S664] = {speed = 1.75, range = 6.5},
        [S665] = {speed = 1.2, range = 7},
        [S666] = {speed = 2, range = 5.5},
        [S667] = {speed = 1.2, range = 67.5},
        [S668] = {speed = 1.5, range = 6.5},
        [S669] = {speed = 1.1, range = 7.25},
        [S670] = {speed = 2, range = 5.5},
        [S671] = {speed = 1.75, range = 6.5},
        [S672] = {speed = 2.2, range = 5.75},
        [S673] = {speed = 2, range = 6.75},
        [S674] = {speed = 2, range = 5.25},
        [S675] = {speed = 1.6, range = 6.5},
        [S676] = {speed = 1.45, range = 6.5},
        [S677] = {speed = 1.5, range = 6},
        [S678] = {speed = 1, range = 5}
    }
}

-- Function to store original attributes of a tool
local function StoreOriginalAttributes(tool)
    if not tool or Combat_State.originalAttributes[tool] then return end
    
    local weaponData = Combat_State.meleeWeapons[tool.Name]
    if not weaponData then return end
    
    Combat_State.originalAttributes[tool] = {}
    
    for attrName, attrValue in pairs(tool:GetAttributes()) do
        if type(attrValue) == S679 then
            Combat_State.originalAttributes[tool][attrName] = attrValue
        end
    end
end

-- Function to modify or restore attributes for detected melee weapons
local function ModifyMeleeAttributes(tool, shouldModify)
    if not tool then return end
    
    -- Check if this tool is a known melee weapon
    local weaponData = Combat_State.meleeWeapons[tool.Name]
    if not weaponData then return end
    
    -- Wait a brief moment for tool to fully load
    wait(0.1)
    
    -- Store original attributes if not already stored
    StoreOriginalAttributes(tool)
    
    if shouldModify then
        -- Get all attributes
        for attrName, attrValue in pairs(tool:GetAttributes()) do
            if type(attrValue) == S680 then
                -- Check if this attribute matches the expected speed value
                if math.abs(attrValue - weaponData.speed) < 0.01 then
                    tool:SetAttribute(attrName, 0)  -- Set speed to 0
                end
                
                -- Check if this attribute matches the expected range value
                if math.abs(attrValue - weaponData.range) < 0.01 then
                    tool:SetAttribute(attrName, Combat_State.customRange)  -- Set range to custom value
                end
            end
        end
    else
        -- Restore original attributes
        if Combat_State.originalAttributes[tool] then
            for attrName, originalValue in pairs(Combat_State.originalAttributes[tool]) do
                tool:SetAttribute(attrName, originalValue)
            end
        end
    end
end

-- Function to modify/restore existing tools
local function ProcessExistingTools(shouldModify)
    if not player.Character then return end
    
    -- Check currently equipped tools
    for _, item in pairs(player.Character:GetChildren()) do
        if item:IsA(S681) then
            ModifyMeleeAttributes(item, shouldModify)
        end
    end
    
    -- Check all tools in backpack
    for _, item in pairs(player.Backpack:GetChildren()) do
        if item:IsA(S682) then
            ModifyMeleeAttributes(item, shouldModify)
        end
    end
end

-- Function to handle new tools being added
local function HandleNewTool(newItem)
    if newItem:IsA(S683) and Combat_State.enabled then
        ModifyMeleeAttributes(newItem, true)
    end
end

-- Set up automatic detection for NEW tools added to backpack
player.Backpack.ChildAdded:Connect(HandleNewTool)

-- Set up automatic detection for NEW tools equipped to character
player.CharacterAdded:Connect(function(character)
    character.ChildAdded:Connect(HandleNewTool)
end)

-- Also set up monitoring for current character if it exists
if player.Character then
    player.Character.ChildAdded:Connect(HandleNewTool)
end

-- Luna Toggle Implementation
Combat:CreateToggle({
    Name = S684,
    Description = S685,
    CurrentValue = false,
    Callback = function(Value)
        Combat_State.enabled = Value
        
        if Combat_State.enabled then
            -- Enable: Modify all existing tools
            ProcessExistingTools(true)
        else
            -- Disable: Restore all existing tools to original values
            ProcessExistingTools(false)
        end
    end
}, S686)

-- Luna Slider Implementation for Range
Combat:CreateSlider({
    Name = S687,
    Range = {10, 50}, -- Range from 10 to 50
    Increment = 1, -- Change by 1 unit
    CurrentValue = 50, -- Starting value
    Callback = function(Value)
        Combat_State.customRange = Value
        
        -- If modifier is currently enabled, update all existing weapons with new range
        if Combat_State.enabled then
            ProcessExistingTools(true)
        end
    end
}, S688)
----------------------------------------------------------------------------------------------------------------------------
--AUTO FINISH (Optimized)
----------------------------------------------------------------------------------------------------------------------------

-- Consolidated state management for auto finish
local AutoFinish_State = {
    enabled = false,
    distance = 10,
    whitelist = {},
    running = false
}

-- Function to get current player names for dropdown
local function getPlayerNames()
    local names = {}
    for _, p in pairs(game.Players:GetPlayers()) do
        if p ~= player then
            table.insert(names, p.Name)
        end
    end
    return names
end

-- Function to clean whitelist of players who left
local function cleanWhitelist()
    local currentPlayers = {}
    for _, p in pairs(game.Players:GetPlayers()) do
        currentPlayers[p.Name] = true
    end
    
    -- Remove players from whitelist who are no longer in game
    for playerName, _ in pairs(AutoFinish_State.whitelist) do
        if not currentPlayers[playerName] then
            AutoFinish_State.whitelist[playerName] = nil
        end
    end
end

-- Luna UI Components
Combat:CreateToggle({
    Name = S689,
    Description = S690,
    CurrentValue = false,
    Callback = function(v) 
        AutoFinish_State.enabled = v 
    end
}, S691)

Combat:CreateSlider({
    Name = S692,
    Range = {1, 20},
    Increment = 1,
    CurrentValue = 10,
    Callback = function(v) 
        AutoFinish_State.distance = v 
    end
}, S693)

Combat:CreateDropdown({
    Name = S694,
    Description = S695,
    Options = getPlayerNames(),
    CurrentOption = {},
    MultipleOptions = true,
    SpecialType = nil,
    Callback = function(Options)
        -- Clear current whitelist
        AutoFinish_State.whitelist = {}
        
        -- Add selected players to whitelist
        local selectedPlayers = type(Options) == S696 and Options or {Options}
        for _, playerName in pairs(selectedPlayers) do
            AutoFinish_State.whitelist[playerName] = true
        end
    end
}, S697)

-- Handle players leaving
game.Players.PlayerRemoving:Connect(function(leavingPlayer)
    -- Remove from whitelist if they leave
    if AutoFinish_State.whitelist[leavingPlayer.Name] then
        AutoFinish_State.whitelist[leavingPlayer.Name] = nil
    end
end)

-- Start the main loop if not already running
if not AutoFinish_State.running then
    AutoFinish_State.running = true
    spawn(function()
        while AutoFinish_State.running do
            -- Clean whitelist every 30 seconds to remove disconnected players
            if tick() % 30 < 0.1 then
                cleanWhitelist()
            end
            
            if AutoFinish_State.enabled then
                for _, v in ipairs(game.Players:GetPlayers()) do
                    -- Skip if player is whitelisted or is the local player
                    if v ~= player and not AutoFinish_State.whitelist[v.Name] then
                        local c = v.Character
                        if c then
                            local h = c:FindFirstChild(S698)
                            if h then
                                local p = h:FindFirstChild(S699)
                                if p and p:IsA(S700) then
                                    p.HoldDuration = 0
                                    p.MaxActivationDistance = AutoFinish_State.distance
                                    pcall(function()
                                        p:InputHoldBegin()
                                        p:InputHoldEnd()
                                    end)
                                end
                            end
                        end
                    end
                end
            end
            task.wait(0.1)
        end
    end)
end
